<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class CardMoveResponse implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $moveCardRequestReference;

    /**
     * @var CardMoveResponseSuccessfulRequestsItems[]|null
     */
    private $successfulRequests;

    /**
     * @var CardMoveResponseErrorCardsItems[]|null
     */
    private $errorCards;

    /**
     * @var string|null
     */
    private $requestId;

    /**
     * @var ErrorStatus|null
     */
    private $error;

    /**
     * Returns Move Card Request Reference.
     */
    public function getMoveCardRequestReference(): ?int
    {
        return $this->moveCardRequestReference;
    }

    /**
     * Sets Move Card Request Reference.
     *
     * @maps MoveCardRequestReference
     */
    public function setMoveCardRequestReference(?int $moveCardRequestReference): void
    {
        $this->moveCardRequestReference = $moveCardRequestReference;
    }

    /**
     * Returns Successful Requests.
     *
     * @return CardMoveResponseSuccessfulRequestsItems[]|null
     */
    public function getSuccessfulRequests(): ?array
    {
        return $this->successfulRequests;
    }

    /**
     * Sets Successful Requests.
     *
     * @maps SuccessfulRequests
     *
     * @param CardMoveResponseSuccessfulRequestsItems[]|null $successfulRequests
     */
    public function setSuccessfulRequests(?array $successfulRequests): void
    {
        $this->successfulRequests = $successfulRequests;
    }

    /**
     * Returns Error Cards.
     *
     * @return CardMoveResponseErrorCardsItems[]|null
     */
    public function getErrorCards(): ?array
    {
        return $this->errorCards;
    }

    /**
     * Sets Error Cards.
     *
     * @maps ErrorCards
     *
     * @param CardMoveResponseErrorCardsItems[]|null $errorCards
     */
    public function setErrorCards(?array $errorCards): void
    {
        $this->errorCards = $errorCards;
    }

    /**
     * Returns Request Id.
     */
    public function getRequestId(): ?string
    {
        return $this->requestId;
    }

    /**
     * Sets Request Id.
     *
     * @maps RequestId
     */
    public function setRequestId(?string $requestId): void
    {
        $this->requestId = $requestId;
    }

    /**
     * Returns Error.
     */
    public function getError(): ?ErrorStatus
    {
        return $this->error;
    }

    /**
     * Sets Error.
     *
     * @maps Error
     */
    public function setError(?ErrorStatus $error): void
    {
        $this->error = $error;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->moveCardRequestReference)) {
            $json['MoveCardRequestReference'] = $this->moveCardRequestReference;
        }
        if (isset($this->successfulRequests)) {
            $json['SuccessfulRequests']       = $this->successfulRequests;
        }
        if (isset($this->errorCards)) {
            $json['ErrorCards']               = $this->errorCards;
        }
        if (isset($this->requestId)) {
            $json['RequestId']                = $this->requestId;
        }
        if (isset($this->error)) {
            $json['Error']                    = $this->error;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
