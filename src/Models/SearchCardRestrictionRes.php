<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class SearchCardRestrictionRes implements \JsonSerializable
{
    /**
     * @var array
     */
    private $requestId = [];

    /**
     * @var RestrictionCardList[]|null
     */
    private $cards;

    /**
     * @var Restriction|null
     */
    private $restrictions;

    /**
     * @var ErrorStatus|null
     */
    private $error;

    /**
     * Returns Request Id.
     * Request Id of the API call
     */
    public function getRequestId(): ?string
    {
        if (count($this->requestId) == 0) {
            return null;
        }
        return $this->requestId['value'];
    }

    /**
     * Sets Request Id.
     * Request Id of the API call
     *
     * @maps RequestId
     */
    public function setRequestId(?string $requestId): void
    {
        $this->requestId['value'] = $requestId;
    }

    /**
     * Unsets Request Id.
     * Request Id of the API call
     */
    public function unsetRequestId(): void
    {
        $this->requestId = [];
    }

    /**
     * Returns Cards.
     *
     * @return RestrictionCardList[]|null
     */
    public function getCards(): ?array
    {
        return $this->cards;
    }

    /**
     * Sets Cards.
     *
     * @maps cards
     *
     * @param RestrictionCardList[]|null $cards
     */
    public function setCards(?array $cards): void
    {
        $this->cards = $cards;
    }

    /**
     * Returns Restrictions.
     */
    public function getRestrictions(): ?Restriction
    {
        return $this->restrictions;
    }

    /**
     * Sets Restrictions.
     *
     * @maps Restrictions
     */
    public function setRestrictions(?Restriction $restrictions): void
    {
        $this->restrictions = $restrictions;
    }

    /**
     * Returns Error.
     */
    public function getError(): ?ErrorStatus
    {
        return $this->error;
    }

    /**
     * Sets Error.
     *
     * @maps Error
     */
    public function setError(?ErrorStatus $error): void
    {
        $this->error = $error;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->requestId)) {
            $json['RequestId']    = $this->requestId['value'];
        }
        if (isset($this->cards)) {
            $json['cards']        = $this->cards;
        }
        if (isset($this->restrictions)) {
            $json['Restrictions'] = $this->restrictions;
        }
        if (isset($this->error)) {
            $json['Error']        = $this->error;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
