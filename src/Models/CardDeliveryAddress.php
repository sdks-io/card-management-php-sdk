<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class CardDeliveryAddress implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $contactForeName;

    /**
     * @var string|null
     */
    private $contactMiddleName;

    /**
     * @var string|null
     */
    private $contactLastName;

    /**
     * @var string|null
     */
    private $contactTitle;

    /**
     * @var string
     */
    private $companyName;

    /**
     * @var int
     */
    private $addressId;

    /**
     * @var string
     */
    private $addressLine1;

    /**
     * @var string|null
     */
    private $addressLine2;

    /**
     * @var string|null
     */
    private $addressLine3;

    /**
     * @var string
     */
    private $zipCode;

    /**
     * @var string|null
     */
    private $city;

    /**
     * @var array
     */
    private $regionId = [];

    /**
     * @var string|null
     */
    private $region;

    /**
     * @var int
     */
    private $countryId;

    /**
     * @var string
     */
    private $countryISOCode;

    /**
     * @var string
     */
    private $country;

    /**
     * @param string $companyName
     * @param int $addressId
     * @param string $addressLine1
     * @param string $zipCode
     * @param int $countryId
     * @param string $countryISOCode
     * @param string $country
     */
    public function __construct(
        string $companyName,
        int $addressId,
        string $addressLine1,
        string $zipCode,
        int $countryId,
        string $countryISOCode,
        string $country
    ) {
        $this->companyName = $companyName;
        $this->addressId = $addressId;
        $this->addressLine1 = $addressLine1;
        $this->zipCode = $zipCode;
        $this->countryId = $countryId;
        $this->countryISOCode = $countryISOCode;
        $this->country = $country;
    }

    /**
     * Returns Contact Fore Name.
     * Fore name of the contact person
     */
    public function getContactForeName(): ?string
    {
        return $this->contactForeName;
    }

    /**
     * Sets Contact Fore Name.
     * Fore name of the contact person
     *
     * @maps ContactForeName
     */
    public function setContactForeName(?string $contactForeName): void
    {
        $this->contactForeName = $contactForeName;
    }

    /**
     * Returns Contact Middle Name.
     * Middle name of the contact person
     */
    public function getContactMiddleName(): ?string
    {
        return $this->contactMiddleName;
    }

    /**
     * Sets Contact Middle Name.
     * Middle name of the contact person
     *
     * @maps ContactMiddleName
     */
    public function setContactMiddleName(?string $contactMiddleName): void
    {
        $this->contactMiddleName = $contactMiddleName;
    }

    /**
     * Returns Contact Last Name.
     * Last name of the contact person
     */
    public function getContactLastName(): ?string
    {
        return $this->contactLastName;
    }

    /**
     * Sets Contact Last Name.
     * Last name of the contact person
     *
     * @maps ContactLastName
     */
    public function setContactLastName(?string $contactLastName): void
    {
        $this->contactLastName = $contactLastName;
    }

    /**
     * Returns Contact Title.
     * Title of the contact person Optional Max field length- 10 Note- If the Shell Card Platform
     * configuration is set to clear the personal details captured on card orders, this value will be
     * cleared from the record after processing the request.
     */
    public function getContactTitle(): ?string
    {
        return $this->contactTitle;
    }

    /**
     * Sets Contact Title.
     * Title of the contact person Optional Max field length- 10 Note- If the Shell Card Platform
     * configuration is set to clear the personal details captured on card orders, this value will be
     * cleared from the record after processing the request.
     *
     * @maps ContactTitle
     */
    public function setContactTitle(?string $contactTitle): void
    {
        $this->contactTitle = $contactTitle;
    }

    /**
     * Returns Company Name.
     * Company name Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Note- If the
     * Shell Card Platform configuration is set to clear the personal details captured on card orders, this
     * value will be cleared from the record after processing the request.
     */
    public function getCompanyName(): string
    {
        return $this->companyName;
    }

    /**
     * Sets Company Name.
     * Company name Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Note- If the
     * Shell Card Platform configuration is set to clear the personal details captured on card orders, this
     * value will be cleared from the record after processing the request.
     *
     * @required
     * @maps CompanyName
     */
    public function setCompanyName(string $companyName): void
    {
        $this->companyName = $companyName;
    }

    /**
     * Returns Address Id.
     * Address Id in cards platform.
     */
    public function getAddressId(): int
    {
        return $this->addressId;
    }

    /**
     * Sets Address Id.
     * Address Id in cards platform.
     *
     * @required
     * @maps AddressId
     */
    public function setAddressId(int $addressId): void
    {
        $this->addressId = $addressId;
    }

    /**
     * Returns Address Line 1.
     * Address line 1 Mandatory if IsNewDeliveryAddress and OrderReplacement are passed True. Max field
     * length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details
     * captured on card orders, this value will be cleared from the record after processing the request.
     */
    public function getAddressLine1(): string
    {
        return $this->addressLine1;
    }

    /**
     * Sets Address Line 1.
     * Address line 1 Mandatory if IsNewDeliveryAddress and OrderReplacement are passed True. Max field
     * length- 40 Note- If the Shell Card Platform configuration is set to clear the personal details
     * captured on card orders, this value will be cleared from the record after processing the request.
     *
     * @required
     * @maps AddressLine1
     */
    public function setAddressLine1(string $addressLine1): void
    {
        $this->addressLine1 = $addressLine1;
    }

    /**
     * Returns Address Line 2.
     * Address line 2 Optional Max field length- 40 Note- If the Shell Card Platform configuration is set
     * to clear the personal details captured on card orders, this value will be cleared from the record
     * after processing the request.
     */
    public function getAddressLine2(): ?string
    {
        return $this->addressLine2;
    }

    /**
     * Sets Address Line 2.
     * Address line 2 Optional Max field length- 40 Note- If the Shell Card Platform configuration is set
     * to clear the personal details captured on card orders, this value will be cleared from the record
     * after processing the request.
     *
     * @maps AddressLine2
     */
    public function setAddressLine2(?string $addressLine2): void
    {
        $this->addressLine2 = $addressLine2;
    }

    /**
     * Returns Address Line 3.
     * Address line Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to
     * clear the personal details captured on card orders, this value will be cleared from the record after
     * processing the request.
     */
    public function getAddressLine3(): ?string
    {
        return $this->addressLine3;
    }

    /**
     * Sets Address Line 3.
     * Address line Optional Max field length- 40 Note- If the Shell Card Platform configuration is set to
     * clear the personal details captured on card orders, this value will be cleared from the record after
     * processing the request.
     *
     * @maps AddressLine3
     */
    public function setAddressLine3(?string $addressLine3): void
    {
        $this->addressLine3 = $addressLine3;
    }

    /**
     * Returns Zip Code.
     * ZIP code Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Max field length-
     * 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on
     * card orders, this value will be cleared from the record after processing the request.
     */
    public function getZipCode(): string
    {
        return $this->zipCode;
    }

    /**
     * Sets Zip Code.
     * ZIP code Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. True, Max field length-
     * 10 Note- If the Shell Card Platform configuration is set to clear the personal details captured on
     * card orders, this value will be cleared from the record after processing the request.
     *
     * @required
     * @maps ZipCode
     */
    public function setZipCode(string $zipCode): void
    {
        $this->zipCode = $zipCode;
    }

    /**
     * Returns City.
     * City Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the
     * personal details captured on card orders, this value will be cleared from the record after
     * processing the request.
     */
    public function getCity(): ?string
    {
        return $this->city;
    }

    /**
     * Sets City.
     * City Max field length- 40 Note- If the Shell Card Platform configuration is set to clear the
     * personal details captured on card orders, this value will be cleared from the record after
     * processing the request.
     *
     * @maps City
     */
    public function setCity(?string $city): void
    {
        $this->city = $city;
    }

    /**
     * Returns Region Id.
     * Region Id
     */
    public function getRegionId(): ?int
    {
        if (count($this->regionId) == 0) {
            return null;
        }
        return $this->regionId['value'];
    }

    /**
     * Sets Region Id.
     * Region Id
     *
     * @maps RegionId
     */
    public function setRegionId(?int $regionId): void
    {
        $this->regionId['value'] = $regionId;
    }

    /**
     * Unsets Region Id.
     * Region Id
     */
    public function unsetRegionId(): void
    {
        $this->regionId = [];
    }

    /**
     * Returns Region.
     * Region Optional When region is passed, Shell Card Platform will look up for the region id for the
     * given region.  If the option to clear personal details is set in the Shell Card Platform, then this
     * value will be cleared from the record after processing the request .
     */
    public function getRegion(): ?string
    {
        return $this->region;
    }

    /**
     * Sets Region.
     * Region Optional When region is passed, Shell Card Platform will look up for the region id for the
     * given region.  If the option to clear personal details is set in the Shell Card Platform, then this
     * value will be cleared from the record after processing the request .
     *
     * @maps Region
     */
    public function setRegion(?string $region): void
    {
        $this->region = $region;
    }

    /**
     * Returns Country Id.
     * Country Id in cards platform.
     */
    public function getCountryId(): int
    {
        return $this->countryId;
    }

    /**
     * Sets Country Id.
     * Country Id in cards platform.
     *
     * @required
     * @maps CountryId
     */
    public function setCountryId(int $countryId): void
    {
        $this->countryId = $countryId;
    }

    /**
     * Returns Country ISO Code.
     * The ISO code of the country. Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. If
     * the option to clear personal details is set in the Shell Card Platform, then this value will be
     * cleared from the record after processing the request .
     */
    public function getCountryISOCode(): string
    {
        return $this->countryISOCode;
    }

    /**
     * Sets Country ISO Code.
     * The ISO code of the country. Mandatory if IsNewDeliveryAddress and OrderReplacement are passed. If
     * the option to clear personal details is set in the Shell Card Platform, then this value will be
     * cleared from the record after processing the request .
     *
     * @required
     * @maps CountryISOCode
     */
    public function setCountryISOCode(string $countryISOCode): void
    {
        $this->countryISOCode = $countryISOCode;
    }

    /**
     * Returns Country.
     * Country name.
     */
    public function getCountry(): string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     * Country name.
     *
     * @required
     * @maps Country
     */
    public function setCountry(string $country): void
    {
        $this->country = $country;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->contactForeName)) {
            $json['ContactForeName']   = $this->contactForeName;
        }
        if (isset($this->contactMiddleName)) {
            $json['ContactMiddleName'] = $this->contactMiddleName;
        }
        if (isset($this->contactLastName)) {
            $json['ContactLastName']   = $this->contactLastName;
        }
        if (isset($this->contactTitle)) {
            $json['ContactTitle']      = $this->contactTitle;
        }
        $json['CompanyName']           = $this->companyName;
        $json['AddressId']             = $this->addressId;
        $json['AddressLine1']          = $this->addressLine1;
        if (isset($this->addressLine2)) {
            $json['AddressLine2']      = $this->addressLine2;
        }
        if (isset($this->addressLine3)) {
            $json['AddressLine3']      = $this->addressLine3;
        }
        $json['ZipCode']               = $this->zipCode;
        if (isset($this->city)) {
            $json['City']              = $this->city;
        }
        if (!empty($this->regionId)) {
            $json['RegionId']          = $this->regionId['value'];
        }
        if (isset($this->region)) {
            $json['Region']            = $this->region;
        }
        $json['CountryId']             = $this->countryId;
        $json['CountryISOCode']        = $this->countryISOCode;
        $json['Country']               = $this->country;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
