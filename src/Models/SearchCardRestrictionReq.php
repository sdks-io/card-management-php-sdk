<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class SearchCardRestrictionReq implements \JsonSerializable
{
    /**
     * @var array
     */
    private $colCoId = [];

    /**
     * @var array
     */
    private $colCoCode = [];

    /**
     * @var array
     */
    private $payerId = [];

    /**
     * @var string|null
     */
    private $payerNumber;

    /**
     * @var Accounts|null
     */
    private $accounts;

    /**
     * @var array
     */
    private $bundleId = [];

    /**
     * @var SearchCardRestriction|null
     */
    private $cards;

    /**
     * @var array
     */
    private $includeLocationRestrictions = [];

    /**
     * @var array
     */
    private $includeBundleDetails = [];

    /**
     * @var array
     */
    private $includeInheritedLimits = [];

    /**
     * Returns Col Co Id.
     * Collecting Company Id of the selected payer.
     *
     * Optional if ColCoCode is passed else Mandatory.
     *
     * Example:
     *
     * 1 for Philippines
     *
     * 5 for UK
     */
    public function getColCoId(): ?int
    {
        if (count($this->colCoId) == 0) {
            return null;
        }
        return $this->colCoId['value'];
    }

    /**
     * Sets Col Co Id.
     * Collecting Company Id of the selected payer.
     *
     * Optional if ColCoCode is passed else Mandatory.
     *
     * Example:
     *
     * 1 for Philippines
     *
     * 5 for UK
     *
     * @maps ColCoId
     */
    public function setColCoId(?int $colCoId): void
    {
        $this->colCoId['value'] = $colCoId;
    }

    /**
     * Unsets Col Co Id.
     * Collecting Company Id of the selected payer.
     *
     * Optional if ColCoCode is passed else Mandatory.
     *
     * Example:
     *
     * 1 for Philippines
     *
     * 5 for UK
     */
    public function unsetColCoId(): void
    {
        $this->colCoId = [];
    }

    /**
     * Returns Col Co Code.
     * Collecting Company Code (Shell Code) of the selected payer.
     *
     * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional
     * for other countries if ColCoID is provided.
     *
     * Example:
     *
     * 86 for Philippines
     *
     * 5 for UK
     */
    public function getColCoCode(): ?int
    {
        if (count($this->colCoCode) == 0) {
            return null;
        }
        return $this->colCoCode['value'];
    }

    /**
     * Sets Col Co Code.
     * Collecting Company Code (Shell Code) of the selected payer.
     *
     * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional
     * for other countries if ColCoID is provided.
     *
     * Example:
     *
     * 86 for Philippines
     *
     * 5 for UK
     *
     * @maps ColCoCode
     */
    public function setColCoCode(?int $colCoCode): void
    {
        $this->colCoCode['value'] = $colCoCode;
    }

    /**
     * Unsets Col Co Code.
     * Collecting Company Code (Shell Code) of the selected payer.
     *
     * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional
     * for other countries if ColCoID is provided.
     *
     * Example:
     *
     * 86 for Philippines
     *
     * 5 for UK
     */
    public function unsetColCoCode(): void
    {
        $this->colCoCode = [];
    }

    /**
     * Returns Payer Id.
     * Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.
     *
     * Optional if PayerNumber is passed else Mandatory
     *
     * Example: 123456
     */
    public function getPayerId(): ?int
    {
        if (count($this->payerId) == 0) {
            return null;
        }
        return $this->payerId['value'];
    }

    /**
     * Sets Payer Id.
     * Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.
     *
     * Optional if PayerNumber is passed else Mandatory
     *
     * Example: 123456
     *
     * @maps PayerId
     */
    public function setPayerId(?int $payerId): void
    {
        $this->payerId['value'] = $payerId;
    }

    /**
     * Unsets Payer Id.
     * Payer Id (i.e. Customer Id of the Payment Customer) of the selected payer.
     *
     * Optional if PayerNumber is passed else Mandatory
     *
     * Example: 123456
     */
    public function unsetPayerId(): void
    {
        $this->payerId = [];
    }

    /**
     * Returns Payer Number.
     * Payer Number of the selected payer.
     *
     * Optional if PayerId is passed else Mandatory
     *
     * Example: GB000000123
     */
    public function getPayerNumber(): ?string
    {
        return $this->payerNumber;
    }

    /**
     * Sets Payer Number.
     * Payer Number of the selected payer.
     *
     * Optional if PayerId is passed else Mandatory
     *
     * Example: GB000000123
     *
     * @maps PayerNumber
     */
    public function setPayerNumber(?string $payerNumber): void
    {
        $this->payerNumber = $payerNumber;
    }

    /**
     * Returns Accounts.
     */
    public function getAccounts(): ?Accounts
    {
        return $this->accounts;
    }

    /**
     * Sets Accounts.
     *
     * @maps Accounts
     */
    public function setAccounts(?Accounts $accounts): void
    {
        $this->accounts = $accounts;
    }

    /**
     * Returns Bundle Id.
     * Identifier of the Card bundle
     *
     * Optional if cards list is given, else mandatory.
     *
     * This input is a search criterion, if given.
     */
    public function getBundleId(): ?string
    {
        if (count($this->bundleId) == 0) {
            return null;
        }
        return $this->bundleId['value'];
    }

    /**
     * Sets Bundle Id.
     * Identifier of the Card bundle
     *
     * Optional if cards list is given, else mandatory.
     *
     * This input is a search criterion, if given.
     *
     * @maps BundleId
     */
    public function setBundleId(?string $bundleId): void
    {
        $this->bundleId['value'] = $bundleId;
    }

    /**
     * Unsets Bundle Id.
     * Identifier of the Card bundle
     *
     * Optional if cards list is given, else mandatory.
     *
     * This input is a search criterion, if given.
     */
    public function unsetBundleId(): void
    {
        $this->bundleId = [];
    }

    /**
     * Returns Cards.
     */
    public function getCards(): ?SearchCardRestriction
    {
        return $this->cards;
    }

    /**
     * Sets Cards.
     *
     * @maps Cards
     */
    public function setCards(?SearchCardRestriction $cards): void
    {
        $this->cards = $cards;
    }

    /**
     * Returns Include Location Restrictions.
     * True/False
     *
     * Whether to include location restriction of the cards in the response.
     *
     * Optional
     *
     * Default ‘false’
     */
    public function getIncludeLocationRestrictions(): ?bool
    {
        if (count($this->includeLocationRestrictions) == 0) {
            return null;
        }
        return $this->includeLocationRestrictions['value'];
    }

    /**
     * Sets Include Location Restrictions.
     * True/False
     *
     * Whether to include location restriction of the cards in the response.
     *
     * Optional
     *
     * Default ‘false’
     *
     * @maps IncludeLocationRestrictions
     */
    public function setIncludeLocationRestrictions(?bool $includeLocationRestrictions): void
    {
        $this->includeLocationRestrictions['value'] = $includeLocationRestrictions;
    }

    /**
     * Unsets Include Location Restrictions.
     * True/False
     *
     * Whether to include location restriction of the cards in the response.
     *
     * Optional
     *
     * Default ‘false’
     */
    public function unsetIncludeLocationRestrictions(): void
    {
        $this->includeLocationRestrictions = [];
    }

    /**
     * Returns Include Bundle Details.
     * Default value is False,
     *
     * When the value is True, API will return bundle Id associated with cards in the response, if
     * available.
     *
     * Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is expected when set to
     * ‘True’.
     */
    public function getIncludeBundleDetails(): ?bool
    {
        if (count($this->includeBundleDetails) == 0) {
            return null;
        }
        return $this->includeBundleDetails['value'];
    }

    /**
     * Sets Include Bundle Details.
     * Default value is False,
     *
     * When the value is True, API will return bundle Id associated with cards in the response, if
     * available.
     *
     * Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is expected when set to
     * ‘True’.
     *
     * @maps IncludeBundleDetails
     */
    public function setIncludeBundleDetails(?bool $includeBundleDetails): void
    {
        $this->includeBundleDetails['value'] = $includeBundleDetails;
    }

    /**
     * Unsets Include Bundle Details.
     * Default value is False,
     *
     * When the value is True, API will return bundle Id associated with cards in the response, if
     * available.
     *
     * Note: Use ‘Null’ or ‘False’ for optimum performance. A delay in response is expected when set to
     * ‘True’.
     */
    public function unsetIncludeBundleDetails(): void
    {
        $this->includeBundleDetails = [];
    }

    /**
     * Returns Include Inherited Limits.
     * Default value is True,
     *
     * When True: service will return the inherited values for the usage limits (from card-program or
     * account as available) when it is not overridden on the card.
     */
    public function getIncludeInheritedLimits(): ?bool
    {
        if (count($this->includeInheritedLimits) == 0) {
            return null;
        }
        return $this->includeInheritedLimits['value'];
    }

    /**
     * Sets Include Inherited Limits.
     * Default value is True,
     *
     * When True: service will return the inherited values for the usage limits (from card-program or
     * account as available) when it is not overridden on the card.
     *
     * @maps IncludeInheritedLimits
     */
    public function setIncludeInheritedLimits(?bool $includeInheritedLimits): void
    {
        $this->includeInheritedLimits['value'] = $includeInheritedLimits;
    }

    /**
     * Unsets Include Inherited Limits.
     * Default value is True,
     *
     * When True: service will return the inherited values for the usage limits (from card-program or
     * account as available) when it is not overridden on the card.
     */
    public function unsetIncludeInheritedLimits(): void
    {
        $this->includeInheritedLimits = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->colCoId)) {
            $json['ColCoId']                     = $this->colCoId['value'];
        }
        if (!empty($this->colCoCode)) {
            $json['ColCoCode']                   = $this->colCoCode['value'];
        }
        if (!empty($this->payerId)) {
            $json['PayerId']                     = $this->payerId['value'];
        }
        if (isset($this->payerNumber)) {
            $json['PayerNumber']                 = $this->payerNumber;
        }
        if (isset($this->accounts)) {
            $json['Accounts']                    = $this->accounts;
        }
        if (!empty($this->bundleId)) {
            $json['BundleId']                    = $this->bundleId['value'];
        }
        if (isset($this->cards)) {
            $json['Cards']                       = $this->cards;
        }
        if (!empty($this->includeLocationRestrictions)) {
            $json['IncludeLocationRestrictions'] = $this->includeLocationRestrictions['value'];
        }
        if (!empty($this->includeBundleDetails)) {
            $json['IncludeBundleDetails']        = $this->includeBundleDetails['value'];
        }
        if (!empty($this->includeInheritedLimits)) {
            $json['IncludeInheritedLimits']      = $this->includeInheritedLimits['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
