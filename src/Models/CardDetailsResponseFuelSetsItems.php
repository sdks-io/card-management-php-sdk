<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

/**
 * Product restriction
 */
class CardDetailsResponseFuelSetsItems implements \JsonSerializable
{
    /**
     * @var int
     */
    private $productRestrictionId;

    /**
     * @var string
     */
    private $description;

    /**
     * @param int $productRestrictionId
     * @param string $description
     */
    public function __construct(int $productRestrictionId, string $description)
    {
        $this->productRestrictionId = $productRestrictionId;
        $this->description = $description;
    }

    /**
     * Returns Product Restriction Id.
     * product restriction identifier
     */
    public function getProductRestrictionId(): int
    {
        return $this->productRestrictionId;
    }

    /**
     * Sets Product Restriction Id.
     * product restriction identifier
     *
     * @required
     * @maps ProductRestrictionId
     */
    public function setProductRestrictionId(int $productRestrictionId): void
    {
        $this->productRestrictionId = $productRestrictionId;
    }

    /**
     * Returns Description.
     * product set description.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * product set description.
     *
     * @required
     * @maps Description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['ProductRestrictionId'] = $this->productRestrictionId;
        $json['Description']          = $this->description;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
