<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

/**
 * Request entity object for PINReminderCardDetails
 */
class PINReminderCardDetails implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $cardId;

    /**
     * @var int|null
     */
    private $pANID;

    /**
     * @var string|null
     */
    private $pAN;

    /**
     * @var array
     */
    private $cardExpiryDate = [];

    /**
     * @var int
     */
    private $pINAdviceType;

    /**
     * @var int|null
     */
    private $pINContactType;

    /**
     * @var PINDeliverTo|null
     */
    private $pINDeliverTo;

    /**
     * @param int $pINAdviceType
     */
    public function __construct(int $pINAdviceType)
    {
        $this->pINAdviceType = $pINAdviceType;
    }

    /**
     * Returns Card Id.
     * Card Id
     *
     * Optional if Either PANID AND CardExpiryDate or PAN AND CardExpiryDate is passed, else Mandatory.
     * Example: 275549 .<br/>Note:PANID, PAN & ExpiryDate parameters will be ignored if CardId is provided.
     */
    public function getCardId(): ?int
    {
        return $this->cardId;
    }

    /**
     * Sets Card Id.
     * Card Id
     *
     * Optional if Either PANID AND CardExpiryDate or PAN AND CardExpiryDate is passed, else Mandatory.
     * Example: 275549 .<br/>Note:PANID, PAN & ExpiryDate parameters will be ignored if CardId is provided.
     *
     * @maps CardId
     */
    public function setCardId(?int $cardId): void
    {
        $this->cardId = $cardId;
    }

    /**
     * Returns P ANID.
     * PAN ID - Unique PAN ID
     *
     * Optional if Either CardId or PAN AND  ExpiryDate is passed, else Mandatory. Example: 123456.
     * <br/>Note:PANID parameter will be considered only if CardId is not provided
     */
    public function getPANID(): ?int
    {
        return $this->pANID;
    }

    /**
     * Sets P ANID.
     * PAN ID - Unique PAN ID
     *
     * Optional if Either CardId or PAN AND  ExpiryDate is passed, else Mandatory. Example: 123456.
     * <br/>Note:PANID parameter will be considered only if CardId is not provided
     *
     * @maps PANID
     */
    public function setPANID(?int $pANID): void
    {
        $this->pANID = $pANID;
    }

    /**
     * Returns P AN.
     * PAN of the card.
     * Optional if Either CardId or PANID is passed, else Mandatory. <br/>Note:PAN & ExpiryDate parameters
     * will be considered only if CardId & PANID are not provided
     */
    public function getPAN(): ?string
    {
        return $this->pAN;
    }

    /**
     * Sets P AN.
     * PAN of the card.
     * Optional if Either CardId or PANID is passed, else Mandatory. <br/>Note:PAN & ExpiryDate parameters
     * will be considered only if CardId & PANID are not provided
     *
     * @maps PAN
     */
    public function setPAN(?string $pAN): void
    {
        $this->pAN = $pAN;
    }

    /**
     * Returns Card Expiry Date.
     * Expiry date of the card.
     * Mandatory if Either PAN or PANID is passed, else optional.
     * Format: yyyyMMdd
     */
    public function getCardExpiryDate(): ?string
    {
        if (count($this->cardExpiryDate) == 0) {
            return null;
        }
        return $this->cardExpiryDate['value'];
    }

    /**
     * Sets Card Expiry Date.
     * Expiry date of the card.
     * Mandatory if Either PAN or PANID is passed, else optional.
     * Format: yyyyMMdd
     *
     * @maps CardExpiryDate
     */
    public function setCardExpiryDate(?string $cardExpiryDate): void
    {
        $this->cardExpiryDate['value'] = $cardExpiryDate;
    }

    /**
     * Unsets Card Expiry Date.
     * Expiry date of the card.
     * Mandatory if Either PAN or PANID is passed, else optional.
     * Format: yyyyMMdd
     */
    public function unsetCardExpiryDate(): void
    {
        $this->cardExpiryDate = [];
    }

    /**
     * Returns P in Advice Type.
     * PIN delivery method.
     * Mandatory
     * Allowed Values:
     *
     * 1.    Paper
     *
     * 2.    Email
     *
     * 3.    SMS
     */
    public function getPINAdviceType(): int
    {
        return $this->pINAdviceType;
    }

    /**
     * Sets P in Advice Type.
     * PIN delivery method.
     * Mandatory
     * Allowed Values:
     *
     * 1.    Paper
     *
     * 2.    Email
     *
     * 3.    SMS
     *
     * @required
     * @maps PINAdviceType
     */
    public function setPINAdviceType(int $pINAdviceType): void
    {
        $this->pINAdviceType = $pINAdviceType;
    }

    /**
     * Returns P in Contact Type.
     * PIN Contact Type.
     * Mandatory
     * Allowed Values:
     * 1.    Use PIN Delivery contact details stored previously for this card
     * 2.    Use Card Delivery contact details stored previously for this card
     * 3.    Use default PIN Delivery contact details stored for this customer
     * 4.    Use new specific contact for PIN Reminder only
     *
     *
     * Note: - PINContactType “3” is only allowed for Paper delivery
     */
    public function getPINContactType(): ?int
    {
        return $this->pINContactType;
    }

    /**
     * Sets P in Contact Type.
     * PIN Contact Type.
     * Mandatory
     * Allowed Values:
     * 1.    Use PIN Delivery contact details stored previously for this card
     * 2.    Use Card Delivery contact details stored previously for this card
     * 3.    Use default PIN Delivery contact details stored for this customer
     * 4.    Use new specific contact for PIN Reminder only
     *
     *
     * Note: - PINContactType “3” is only allowed for Paper delivery
     *
     * @maps PINContactType
     */
    public function setPINContactType(?int $pINContactType): void
    {
        $this->pINContactType = $pINContactType;
    }

    /**
     * Returns P in Deliver To.
     */
    public function getPINDeliverTo(): ?PINDeliverTo
    {
        return $this->pINDeliverTo;
    }

    /**
     * Sets P in Deliver To.
     *
     * @maps PINDeliverTo
     */
    public function setPINDeliverTo(?PINDeliverTo $pINDeliverTo): void
    {
        $this->pINDeliverTo = $pINDeliverTo;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->cardId)) {
            $json['CardId']         = $this->cardId;
        }
        if (isset($this->pANID)) {
            $json['PANID']          = $this->pANID;
        }
        if (isset($this->pAN)) {
            $json['PAN']            = $this->pAN;
        }
        if (!empty($this->cardExpiryDate)) {
            $json['CardExpiryDate'] = $this->cardExpiryDate['value'];
        }
        $json['PINAdviceType']      = $this->pINAdviceType;
        if (isset($this->pINContactType)) {
            $json['PINContactType'] = $this->pINContactType;
        }
        if (isset($this->pINDeliverTo)) {
            $json['PINDeliverTo']   = $this->pINDeliverTo;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
