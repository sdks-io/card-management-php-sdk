<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * POS language identifier. Language Id:
 * * `1` - German
 * * `2` - French
 * * `3` - Bulgarian
 * * `4` - Croatian
 * * `5` - Czech
 * * `6` - Danish
 * * `7` - Finnish
 * * `8` - English
 * * `9` - Greek
 * * `10` - Chinese
 * * `11` - Hungarian
 * * `12` - Italian
 * * `13` - Luxembourgish
 * * `14` - Malay
 * * `15` - Dutch
 * * `16` - Norwegian, Bokmal
 * * `17` - Urdu
 * * `18` - Polish
 * * `19` - Portuguese
 * * `20` - Romanian
 * * `21` - Russian
 * * `22` - Slovak
 * * `23` - Slovenian
 * * `24` - Spanish
 * * `25` - Swedish
 * * `26` - Turkish
 * * `27` - Thai
 * * `28` - Filipino
 * * `29` - Estonian
 * * `30` - Latvian
 * * `31` - Lithuanian
 */
class CardDetailsResponseLocalPOSLanguageIDEnum
{
    public const ENUM_1 = 1;

    public const ENUM_2 = 2;

    public const ENUM_3 = 3;

    public const ENUM_4 = 4;

    public const ENUM_5 = 5;

    public const ENUM_6 = 6;

    public const ENUM_7 = 7;

    public const ENUM_8 = 8;

    public const ENUM_9 = 9;

    public const ENUM_10 = 10;

    public const ENUM_11 = 11;

    public const ENUM_12 = 12;

    public const ENUM_13 = 13;

    public const ENUM_14 = 14;

    public const ENUM_15 = 15;

    public const ENUM_16 = 16;

    public const ENUM_17 = 17;

    public const ENUM_18 = 18;

    public const ENUM_19 = 19;

    public const ENUM_20 = 20;

    public const ENUM_21 = 21;

    public const ENUM_22 = 22;

    public const ENUM_23 = 23;

    public const ENUM_24 = 24;

    public const ENUM_25 = 25;

    public const ENUM_26 = 26;

    public const ENUM_27 = 27;

    public const ENUM_28 = 28;

    public const ENUM_29 = 29;

    public const ENUM_30 = 30;

    public const ENUM_31 = 31;

    private const _ALL_VALUES = [
        self::ENUM_1,
        self::ENUM_2,
        self::ENUM_3,
        self::ENUM_4,
        self::ENUM_5,
        self::ENUM_6,
        self::ENUM_7,
        self::ENUM_8,
        self::ENUM_9,
        self::ENUM_10,
        self::ENUM_11,
        self::ENUM_12,
        self::ENUM_13,
        self::ENUM_14,
        self::ENUM_15,
        self::ENUM_16,
        self::ENUM_17,
        self::ENUM_18,
        self::ENUM_19,
        self::ENUM_20,
        self::ENUM_21,
        self::ENUM_22,
        self::ENUM_23,
        self::ENUM_24,
        self::ENUM_25,
        self::ENUM_26,
        self::ENUM_27,
        self::ENUM_28,
        self::ENUM_29,
        self::ENUM_30,
        self::ENUM_31
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|int $value Value or a list/map of values to be checked
     *
     * @return array|null|int Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for CardDetailsResponseLocalPOSLanguageIDEnum.");
    }
}
