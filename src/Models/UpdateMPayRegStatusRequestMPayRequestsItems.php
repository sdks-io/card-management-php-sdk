<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class UpdateMPayRegStatusRequestMPayRequestsItems implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $globalRequestID;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $approverUserID;

    /**
     * @var string|null
     */
    private $approverUserDisplayName;

    /**
     * @var string|null
     */
    private $reason;

    /**
     * Returns Global Request ID.
     * List of MPay Request to be updated for Fleet Manager approval status.
     * Mandatory
     * Maximum number of requests that can be submitted are 50
     */
    public function getGlobalRequestID(): ?string
    {
        return $this->globalRequestID;
    }

    /**
     * Sets Global Request ID.
     * List of MPay Request to be updated for Fleet Manager approval status.
     * Mandatory
     * Maximum number of requests that can be submitted are 50
     *
     * @maps GlobalRequestID
     */
    public function setGlobalRequestID(?string $globalRequestID): void
    {
        $this->globalRequestID = $globalRequestID;
    }

    /**
     * Returns Status.
     * Status of mobile payment registration request
     * Mandatory.
     * Allowed values –
     * • Approved
     * •   Rejected
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Status of mobile payment registration request
     * Mandatory.
     * Allowed values –
     * • Approved
     * •   Rejected
     *
     * @maps Status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Approver User ID.
     * Approver’s User ID
     * ApproverUserID is mandatory when Status is Approved else optional
     */
    public function getApproverUserID(): ?string
    {
        return $this->approverUserID;
    }

    /**
     * Sets Approver User ID.
     * Approver’s User ID
     * ApproverUserID is mandatory when Status is Approved else optional
     *
     * @maps ApproverUserID
     */
    public function setApproverUserID(?string $approverUserID): void
    {
        $this->approverUserID = $approverUserID;
    }

    /**
     * Returns Approver User Display Name.
     * Approver’s display name
     * Mandatory when Status is Approved else optional.
     */
    public function getApproverUserDisplayName(): ?string
    {
        return $this->approverUserDisplayName;
    }

    /**
     * Sets Approver User Display Name.
     * Approver’s display name
     * Mandatory when Status is Approved else optional.
     *
     * @maps ApproverUserDisplayName
     */
    public function setApproverUserDisplayName(?string $approverUserDisplayName): void
    {
        $this->approverUserDisplayName = $approverUserDisplayName;
    }

    /**
     * Returns Reason.
     * Reason for Fleet Manager approval/rejection.
     * Optional
     */
    public function getReason(): ?string
    {
        return $this->reason;
    }

    /**
     * Sets Reason.
     * Reason for Fleet Manager approval/rejection.
     * Optional
     *
     * @maps Reason
     */
    public function setReason(?string $reason): void
    {
        $this->reason = $reason;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->globalRequestID)) {
            $json['GlobalRequestID']         = $this->globalRequestID;
        }
        if (isset($this->status)) {
            $json['Status']                  = $this->status;
        }
        if (isset($this->approverUserID)) {
            $json['ApproverUserID']          = $this->approverUserID;
        }
        if (isset($this->approverUserDisplayName)) {
            $json['ApproverUserDisplayName'] = $this->approverUserDisplayName;
        }
        if (isset($this->reason)) {
            $json['Reason']                  = $this->reason;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
