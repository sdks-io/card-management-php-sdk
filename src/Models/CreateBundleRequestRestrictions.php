<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

/**
 * Restrictions to be applied on the bundle.
 *
 * Mandatory
 */
class CreateBundleRequestRestrictions implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $usageRestrictionAction;

    /**
     * @var string|null
     */
    private $dayTimeRestrictionAction;

    /**
     * @var string
     */
    private $locationRestrictionAction;

    /**
     * @var DayTimeRestrictions|null
     */
    private $dayTimeRestrictions;

    /**
     * @var LocationRestrictions|null
     */
    private $locationRestrictions;

    /**
     * @var ProductRestrictions|null
     */
    private $productRestrictions;

    /**
     * @var UsageRestrictions|null
     */
    private $usageRestrictions;

    /**
     * @param string $locationRestrictionAction
     */
    public function __construct(string $locationRestrictionAction)
    {
        $this->locationRestrictionAction = $locationRestrictionAction;
    }

    /**
     * Returns Usage Restriction Action.
     * Usage restrictions such as value, volume and transaction count restricted per day, week, month,
     * annum, lifetime and transaction to be applied on the bundle.
     *
     * Mandatory
     */
    public function getUsageRestrictionAction(): ?string
    {
        return $this->usageRestrictionAction;
    }

    /**
     * Sets Usage Restriction Action.
     * Usage restrictions such as value, volume and transaction count restricted per day, week, month,
     * annum, lifetime and transaction to be applied on the bundle.
     *
     * Mandatory
     *
     * @maps UsageRestrictionAction
     */
    public function setUsageRestrictionAction(?string $usageRestrictionAction): void
    {
        $this->usageRestrictionAction = $usageRestrictionAction;
    }

    /**
     * Returns Day Time Restriction Action.
     * The value indicates what actions to be performed with respect to day time restriction.
     *
     * Mandatory
     *
     * Allowed values –
     *
     * • Add: Apply the given restriction on the bundle.
     *
     * • Default: No Day/Time restriction will be applied on the bundle in Gateway.
     */
    public function getDayTimeRestrictionAction(): ?string
    {
        return $this->dayTimeRestrictionAction;
    }

    /**
     * Sets Day Time Restriction Action.
     * The value indicates what actions to be performed with respect to day time restriction.
     *
     * Mandatory
     *
     * Allowed values –
     *
     * • Add: Apply the given restriction on the bundle.
     *
     * • Default: No Day/Time restriction will be applied on the bundle in Gateway.
     *
     * @maps DayTimeRestrictionAction
     */
    public function setDayTimeRestrictionAction(?string $dayTimeRestrictionAction): void
    {
        $this->dayTimeRestrictionAction = $dayTimeRestrictionAction;
    }

    /**
     * Returns Location Restriction Action.
     * The value indicates what actions to be performed with respect to location restriction.
     *
     * Mandatory
     *
     * Allowed values –
     *
     * • Add: Apply the given restriction on the bundle.
     *
     * • Default: No location restriction will be applied on the bundle in Gateway.
     */
    public function getLocationRestrictionAction(): string
    {
        return $this->locationRestrictionAction;
    }

    /**
     * Sets Location Restriction Action.
     * The value indicates what actions to be performed with respect to location restriction.
     *
     * Mandatory
     *
     * Allowed values –
     *
     * • Add: Apply the given restriction on the bundle.
     *
     * • Default: No location restriction will be applied on the bundle in Gateway.
     *
     * @required
     * @maps LocationRestrictionAction
     */
    public function setLocationRestrictionAction(string $locationRestrictionAction): void
    {
        $this->locationRestrictionAction = $locationRestrictionAction;
    }

    /**
     * Returns Day Time Restrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle.
     *
     * Mandatory if respective action is set as “Add”.
     *
     * The details of DayTimeRestriction entity is given below.
     */
    public function getDayTimeRestrictions(): ?DayTimeRestrictions
    {
        return $this->dayTimeRestrictions;
    }

    /**
     * Sets Day Time Restrictions.
     * Day/time restrictions such as weekdays and time range to be applied on the bundle.
     *
     * Mandatory if respective action is set as “Add”.
     *
     * The details of DayTimeRestriction entity is given below.
     *
     * @maps DayTimeRestrictions
     */
    public function setDayTimeRestrictions(?DayTimeRestrictions $dayTimeRestrictions): void
    {
        $this->dayTimeRestrictions = $dayTimeRestrictions;
    }

    /**
     * Returns Location Restrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the cards,
     * which are under the bundle, in the specified locations.
     *
     * Mandatory if respective action is set as “Add”.
     *
     * Details of location restrictions are given below.
     */
    public function getLocationRestrictions(): ?LocationRestrictions
    {
        return $this->locationRestrictions;
    }

    /**
     * Sets Location Restrictions.
     * Location restrictions to be applied on the bundle which either allows or restricts using the cards,
     * which are under the bundle, in the specified locations.
     *
     * Mandatory if respective action is set as “Add”.
     *
     * Details of location restrictions are given below.
     *
     * @maps LocationRestrictions
     */
    public function setLocationRestrictions(?LocationRestrictions $locationRestrictions): void
    {
        $this->locationRestrictions = $locationRestrictions;
    }

    /**
     * Returns Product Restrictions.
     */
    public function getProductRestrictions(): ?ProductRestrictions
    {
        return $this->productRestrictions;
    }

    /**
     * Sets Product Restrictions.
     *
     * @maps ProductRestrictions
     */
    public function setProductRestrictions(?ProductRestrictions $productRestrictions): void
    {
        $this->productRestrictions = $productRestrictions;
    }

    /**
     * Returns Usage Restrictions.
     */
    public function getUsageRestrictions(): ?UsageRestrictions
    {
        return $this->usageRestrictions;
    }

    /**
     * Sets Usage Restrictions.
     *
     * @maps UsageRestrictions
     */
    public function setUsageRestrictions(?UsageRestrictions $usageRestrictions): void
    {
        $this->usageRestrictions = $usageRestrictions;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['UsageRestrictionAction']    = $this->usageRestrictionAction;
        $json['DayTimeRestrictionAction']  = $this->dayTimeRestrictionAction;
        $json['LocationRestrictionAction'] = $this->locationRestrictionAction;
        if (isset($this->dayTimeRestrictions)) {
            $json['DayTimeRestrictions']   = $this->dayTimeRestrictions;
        }
        if (isset($this->locationRestrictions)) {
            $json['LocationRestrictions']  = $this->locationRestrictions;
        }
        if (isset($this->productRestrictions)) {
            $json['ProductRestrictions']   = $this->productRestrictions;
        }
        if (isset($this->usageRestrictions)) {
            $json['UsageRestrictions']     = $this->usageRestrictions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
