<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class PurchaseCategoryRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $requestId;

    /**
     * @var array
     */
    private $colCoCode = [];

    /**
     * @var array
     */
    private $colCoId = [];

    /**
     * @var array
     */
    private $cardTypeId = [];

    /**
     * @var int|null
     */
    private $purchaseCategoryId;

    /**
     * @var string|null
     */
    private $languageCode;

    /**
     * Returns Request Id.
     * Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played
     * back in the response from the request.
     */
    public function getRequestId(): ?string
    {
        return $this->requestId;
    }

    /**
     * Sets Request Id.
     * Mandatory UUID (according to RFC 4122 standards) for requests and responses. This will be played
     * back in the response from the request.
     *
     * @maps RequestId
     */
    public function setRequestId(?string $requestId): void
    {
        $this->requestId = $requestId;
    }

    /**
     * Returns Col Co Code.
     * Collecting Company Code (Shell Code).
     */
    public function getColCoCode(): ?int
    {
        if (count($this->colCoCode) == 0) {
            return null;
        }
        return $this->colCoCode['value'];
    }

    /**
     * Sets Col Co Code.
     * Collecting Company Code (Shell Code).
     *
     * @maps ColCoCode
     */
    public function setColCoCode(?int $colCoCode): void
    {
        $this->colCoCode['value'] = $colCoCode;
    }

    /**
     * Unsets Col Co Code.
     * Collecting Company Code (Shell Code).
     */
    public function unsetColCoCode(): void
    {
        $this->colCoCode = [];
    }

    /**
     * Returns Col Co Id.
     * Collecting Company Id (in Shell Cards Platform).
     */
    public function getColCoId(): ?int
    {
        if (count($this->colCoId) == 0) {
            return null;
        }
        return $this->colCoId['value'];
    }

    /**
     * Sets Col Co Id.
     * Collecting Company Id (in Shell Cards Platform).
     *
     * @maps ColCoId
     */
    public function setColCoId(?int $colCoId): void
    {
        $this->colCoId['value'] = $colCoId;
    }

    /**
     * Unsets Col Co Id.
     * Collecting Company Id (in Shell Cards Platform).
     */
    public function unsetColCoId(): void
    {
        $this->colCoId = [];
    }

    /**
     * Returns Card Type Id.
     * Card type Id
     */
    public function getCardTypeId(): ?int
    {
        if (count($this->cardTypeId) == 0) {
            return null;
        }
        return $this->cardTypeId['value'];
    }

    /**
     * Sets Card Type Id.
     * Card type Id
     *
     * @maps CardTypeId
     */
    public function setCardTypeId(?int $cardTypeId): void
    {
        $this->cardTypeId['value'] = $cardTypeId;
    }

    /**
     * Unsets Card Type Id.
     * Card type Id
     */
    public function unsetCardTypeId(): void
    {
        $this->cardTypeId = [];
    }

    /**
     * Returns Purchase Category Id.
     * Purchase category Id
     * Optional.
     * Example: 123, 124, etc.,
     */
    public function getPurchaseCategoryId(): ?int
    {
        return $this->purchaseCategoryId;
    }

    /**
     * Sets Purchase Category Id.
     * Purchase category Id
     * Optional.
     * Example: 123, 124, etc.,
     *
     * @maps PurchaseCategoryId
     */
    public function setPurchaseCategoryId(?int $purchaseCategoryId): void
    {
        $this->purchaseCategoryId = $purchaseCategoryId;
    }

    /**
     * Returns Language Code.
     * Language code for the Title and Description.
     *
     * Language codes should be same as SFH supported language
     *
     * Optional.
     *
     * Default: en-GB
     *
     * Example:
     *
     * en-GB – English (UK)
     *
     * nl-NL – Dutch (Netherlands)
     */
    public function getLanguageCode(): ?string
    {
        return $this->languageCode;
    }

    /**
     * Sets Language Code.
     * Language code for the Title and Description.
     *
     * Language codes should be same as SFH supported language
     *
     * Optional.
     *
     * Default: en-GB
     *
     * Example:
     *
     * en-GB – English (UK)
     *
     * nl-NL – Dutch (Netherlands)
     *
     * @maps LanguageCode
     */
    public function setLanguageCode(?string $languageCode): void
    {
        $this->languageCode = $languageCode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->requestId)) {
            $json['RequestId']          = $this->requestId;
        }
        if (!empty($this->colCoCode)) {
            $json['ColCoCode']          = $this->colCoCode['value'];
        }
        if (!empty($this->colCoId)) {
            $json['ColCoId']            = $this->colCoId['value'];
        }
        if (!empty($this->cardTypeId)) {
            $json['CardTypeId']         = $this->cardTypeId['value'];
        }
        if (isset($this->purchaseCategoryId)) {
            $json['PurchaseCategoryId'] = $this->purchaseCategoryId;
        }
        if (isset($this->languageCode)) {
            $json['LanguageCode']       = $this->languageCode;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
