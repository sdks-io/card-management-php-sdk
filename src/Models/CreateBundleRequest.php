<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class CreateBundleRequest implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $colCoId;

    /**
     * @var int|null
     */
    private $payerId;

    /**
     * @var int|null
     */
    private $accountId;

    /**
     * @var array
     */
    private $externalBundleId = [];

    /**
     * @var string
     */
    private $description;

    /**
     * @var string[]
     */
    private $cards;

    /**
     * @var array
     */
    private $colCoCode = [];

    /**
     * @var string|null
     */
    private $payerNumber;

    /**
     * @var array
     */
    private $accountNumber = [];

    /**
     * @var CreateBundleRequestRestrictions|null
     */
    private $restrictions;

    /**
     * @param string $description
     * @param string[] $cards
     */
    public function __construct(string $description, array $cards)
    {
        $this->description = $description;
        $this->cards = $cards;
    }

    /**
     * Returns Col Co Id.
     * Collecting Company Id  of the selected payer.
     *
     * Optional if ColCoCode is passed else Mandatory.
     *
     * Example:
     *
     * 1-Philippines
     *
     * 5-UK
     */
    public function getColCoId(): ?int
    {
        return $this->colCoId;
    }

    /**
     * Sets Col Co Id.
     * Collecting Company Id  of the selected payer.
     *
     * Optional if ColCoCode is passed else Mandatory.
     *
     * Example:
     *
     * 1-Philippines
     *
     * 5-UK
     *
     * @maps ColCoId
     */
    public function setColCoId(?int $colCoId): void
    {
        $this->colCoId = $colCoId;
    }

    /**
     * Returns Payer Id.
     * Payer Id of the selected payer.
     *
     * Optional if PayerNumber is passed else Mandatory
     *
     * Example: 123456
     */
    public function getPayerId(): ?int
    {
        return $this->payerId;
    }

    /**
     * Sets Payer Id.
     * Payer Id of the selected payer.
     *
     * Optional if PayerNumber is passed else Mandatory
     *
     * Example: 123456
     *
     * @maps PayerId
     */
    public function setPayerId(?int $payerId): void
    {
        $this->payerId = $payerId;
    }

    /**
     * Returns Account Id.
     * Account ID of the customer.
     *
     * Either AccountId or AccountNumber or both must be passed.
     *
     * Example: 123456
     */
    public function getAccountId(): ?int
    {
        return $this->accountId;
    }

    /**
     * Sets Account Id.
     * Account ID of the customer.
     *
     * Either AccountId or AccountNumber or both must be passed.
     *
     * Example: 123456
     *
     * @maps AccountId
     */
    public function setAccountId(?int $accountId): void
    {
        $this->accountId = $accountId;
    }

    /**
     * Returns External Bundle Id.
     * Identifier of the bundle in external system.
     *
     * Optional.
     */
    public function getExternalBundleId(): ?string
    {
        if (count($this->externalBundleId) == 0) {
            return null;
        }
        return $this->externalBundleId['value'];
    }

    /**
     * Sets External Bundle Id.
     * Identifier of the bundle in external system.
     *
     * Optional.
     *
     * @maps ExternalBundleId
     */
    public function setExternalBundleId(?string $externalBundleId): void
    {
        $this->externalBundleId['value'] = $externalBundleId;
    }

    /**
     * Unsets External Bundle Id.
     * Identifier of the bundle in external system.
     *
     * Optional.
     */
    public function unsetExternalBundleId(): void
    {
        $this->externalBundleId = [];
    }

    /**
     * Returns Description.
     * A bundle description.
     *
     * Optional.
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * A bundle description.
     *
     * Optional.
     *
     * @required
     * @maps Description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Cards.
     * List of Card PANs to be added in the bundle.
     *
     * Mandatory.
     *
     * Example: 7002051006629890645
     *
     * When PAN matches with multiple cards, the restriction will be applied on the latest issued card.
     *
     * @return string[]
     */
    public function getCards(): array
    {
        return $this->cards;
    }

    /**
     * Sets Cards.
     * List of Card PANs to be added in the bundle.
     *
     * Mandatory.
     *
     * Example: 7002051006629890645
     *
     * When PAN matches with multiple cards, the restriction will be applied on the latest issued card.
     *
     * @required
     * @maps Cards
     *
     * @param string[] $cards
     */
    public function setCards(array $cards): void
    {
        $this->cards = $cards;
    }

    /**
     * Returns Col Co Code.
     * Collecting Company Code (Shell Code) of the selected payer.
     *
     * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional
     * for other countries if ColCoID is provided.
     *
     * Example:
     *
     * 86-Philippines
     *
     * 5-UK
     */
    public function getColCoCode(): ?int
    {
        if (count($this->colCoCode) == 0) {
            return null;
        }
        return $this->colCoCode['value'];
    }

    /**
     * Sets Col Co Code.
     * Collecting Company Code (Shell Code) of the selected payer.
     *
     * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional
     * for other countries if ColCoID is provided.
     *
     * Example:
     *
     * 86-Philippines
     *
     * 5-UK
     *
     * @maps ColCoCode
     */
    public function setColCoCode(?int $colCoCode): void
    {
        $this->colCoCode['value'] = $colCoCode;
    }

    /**
     * Unsets Col Co Code.
     * Collecting Company Code (Shell Code) of the selected payer.
     *
     * Mandatory for serviced OUs such as Romania, Latvia, Lithuania, Estonia, Ukraine etc. It is optional
     * for other countries if ColCoID is provided.
     *
     * Example:
     *
     * 86-Philippines
     *
     * 5-UK
     */
    public function unsetColCoCode(): void
    {
        $this->colCoCode = [];
    }

    /**
     * Returns Payer Number.
     * Payer Number (Ex: GB000000123) of the selected payer.
     *
     * Optional if PayerId is passed else Mandatory
     */
    public function getPayerNumber(): ?string
    {
        return $this->payerNumber;
    }

    /**
     * Sets Payer Number.
     * Payer Number (Ex: GB000000123) of the selected payer.
     *
     * Optional if PayerId is passed else Mandatory
     *
     * @maps PayerNumber
     */
    public function setPayerNumber(?string $payerNumber): void
    {
        $this->payerNumber = $payerNumber;
    }

    /**
     * Returns Account Number.
     * Account Number of the customer.
     *
     * Either AccountId or AccountNumber or both must be passed.
     *
     * Example: GB000000123
     */
    public function getAccountNumber(): ?string
    {
        if (count($this->accountNumber) == 0) {
            return null;
        }
        return $this->accountNumber['value'];
    }

    /**
     * Sets Account Number.
     * Account Number of the customer.
     *
     * Either AccountId or AccountNumber or both must be passed.
     *
     * Example: GB000000123
     *
     * @maps AccountNumber
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber['value'] = $accountNumber;
    }

    /**
     * Unsets Account Number.
     * Account Number of the customer.
     *
     * Either AccountId or AccountNumber or both must be passed.
     *
     * Example: GB000000123
     */
    public function unsetAccountNumber(): void
    {
        $this->accountNumber = [];
    }

    /**
     * Returns Restrictions.
     * Restrictions to be applied on the bundle.
     *
     * Mandatory
     */
    public function getRestrictions(): ?CreateBundleRequestRestrictions
    {
        return $this->restrictions;
    }

    /**
     * Sets Restrictions.
     * Restrictions to be applied on the bundle.
     *
     * Mandatory
     *
     * @maps Restrictions
     */
    public function setRestrictions(?CreateBundleRequestRestrictions $restrictions): void
    {
        $this->restrictions = $restrictions;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->colCoId)) {
            $json['ColCoId']          = $this->colCoId;
        }
        if (isset($this->payerId)) {
            $json['PayerId']          = $this->payerId;
        }
        if (isset($this->accountId)) {
            $json['AccountId']        = $this->accountId;
        }
        if (!empty($this->externalBundleId)) {
            $json['ExternalBundleId'] = $this->externalBundleId['value'];
        }
        $json['Description']          = $this->description;
        $json['Cards']                = $this->cards;
        if (!empty($this->colCoCode)) {
            $json['ColCoCode']        = $this->colCoCode['value'];
        }
        if (isset($this->payerNumber)) {
            $json['PayerNumber']      = $this->payerNumber;
        }
        if (!empty($this->accountNumber)) {
            $json['AccountNumber']    = $this->accountNumber['value'];
        }
        if (isset($this->restrictions)) {
            $json['Restrictions']     = $this->restrictions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
