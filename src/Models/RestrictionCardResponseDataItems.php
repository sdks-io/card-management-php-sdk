<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class RestrictionCardResponseDataItems implements \JsonSerializable
{
    /**
     * @var array
     */
    private $accountId = [];

    /**
     * @var array
     */
    private $accountNumber = [];

    /**
     * @var array
     */
    private $cardId = [];

    /**
     * @var array
     */
    private $dayTimeRestrictionDescription = [];

    /**
     * @var array
     */
    private $dayTimeRestrictionStatus = [];

    /**
     * @var array
     */
    private $locationRestrictionDescription = [];

    /**
     * @var array
     */
    private $locationRestrictionStatus = [];

    /**
     * @var array
     */
    private $pAN = [];

    /**
     * @var array
     */
    private $productRestrictionDescription = [];

    /**
     * @var array
     */
    private $productRestrictionStatus = [];

    /**
     * @var array
     */
    private $usageRestrictionDescription = [];

    /**
     * @var array
     */
    private $usageRestrictionStatus = [];

    /**
     * @var array
     */
    private $validationErrorCode = [];

    /**
     * @var array
     */
    private $validationErrorDescription = [];

    /**
     * Returns Account Id.
     * Account Id of the customer.
     */
    public function getAccountId(): ?int
    {
        if (count($this->accountId) == 0) {
            return null;
        }
        return $this->accountId['value'];
    }

    /**
     * Sets Account Id.
     * Account Id of the customer.
     *
     * @maps AccountId
     */
    public function setAccountId(?int $accountId): void
    {
        $this->accountId['value'] = $accountId;
    }

    /**
     * Unsets Account Id.
     * Account Id of the customer.
     */
    public function unsetAccountId(): void
    {
        $this->accountId = [];
    }

    /**
     * Returns Account Number.
     * Account Number of the customer.
     */
    public function getAccountNumber(): ?string
    {
        if (count($this->accountNumber) == 0) {
            return null;
        }
        return $this->accountNumber['value'];
    }

    /**
     * Sets Account Number.
     * Account Number of the customer.
     *
     * @maps AccountNumber
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber['value'] = $accountNumber;
    }

    /**
     * Unsets Account Number.
     * Account Number of the customer.
     */
    public function unsetAccountNumber(): void
    {
        $this->accountNumber = [];
    }

    /**
     * Returns Card Id.
     * Unique Card Id
     */
    public function getCardId(): ?int
    {
        if (count($this->cardId) == 0) {
            return null;
        }
        return $this->cardId['value'];
    }

    /**
     * Sets Card Id.
     * Unique Card Id
     *
     * @maps CardId
     */
    public function setCardId(?int $cardId): void
    {
        $this->cardId['value'] = $cardId;
    }

    /**
     * Unsets Card Id.
     * Unique Card Id
     */
    public function unsetCardId(): void
    {
        $this->cardId = [];
    }

    /**
     * Returns Day Time Restriction Description.
     * This field will have a value only when “DayTimeRestrictionStatus” is “Failed”.
     */
    public function getDayTimeRestrictionDescription(): ?string
    {
        if (count($this->dayTimeRestrictionDescription) == 0) {
            return null;
        }
        return $this->dayTimeRestrictionDescription['value'];
    }

    /**
     * Sets Day Time Restriction Description.
     * This field will have a value only when “DayTimeRestrictionStatus” is “Failed”.
     *
     * @maps DayTimeRestrictionDescription
     */
    public function setDayTimeRestrictionDescription(?string $dayTimeRestrictionDescription): void
    {
        $this->dayTimeRestrictionDescription['value'] = $dayTimeRestrictionDescription;
    }

    /**
     * Unsets Day Time Restriction Description.
     * This field will have a value only when “DayTimeRestrictionStatus” is “Failed”.
     */
    public function unsetDayTimeRestrictionDescription(): void
    {
        $this->dayTimeRestrictionDescription = [];
    }

    /**
     * Returns Day Time Restriction Status.
     * Status of the card day/time restriction submitted to API. Based on the response from API value will
     * be set as either “Success” or “Failed”.
     */
    public function getDayTimeRestrictionStatus(): ?string
    {
        if (count($this->dayTimeRestrictionStatus) == 0) {
            return null;
        }
        return $this->dayTimeRestrictionStatus['value'];
    }

    /**
     * Sets Day Time Restriction Status.
     * Status of the card day/time restriction submitted to API. Based on the response from API value will
     * be set as either “Success” or “Failed”.
     *
     * @maps DayTimeRestrictionStatus
     */
    public function setDayTimeRestrictionStatus(?string $dayTimeRestrictionStatus): void
    {
        $this->dayTimeRestrictionStatus['value'] = $dayTimeRestrictionStatus;
    }

    /**
     * Unsets Day Time Restriction Status.
     * Status of the card day/time restriction submitted to API. Based on the response from API value will
     * be set as either “Success” or “Failed”.
     */
    public function unsetDayTimeRestrictionStatus(): void
    {
        $this->dayTimeRestrictionStatus = [];
    }

    /**
     * Returns Location Restriction Description.
     * This field will have a value only when “LocationRestrictionStatus” is “Failed”.
     */
    public function getLocationRestrictionDescription(): ?string
    {
        if (count($this->locationRestrictionDescription) == 0) {
            return null;
        }
        return $this->locationRestrictionDescription['value'];
    }

    /**
     * Sets Location Restriction Description.
     * This field will have a value only when “LocationRestrictionStatus” is “Failed”.
     *
     * @maps LocationRestrictionDescription
     */
    public function setLocationRestrictionDescription(?string $locationRestrictionDescription): void
    {
        $this->locationRestrictionDescription['value'] = $locationRestrictionDescription;
    }

    /**
     * Unsets Location Restriction Description.
     * This field will have a value only when “LocationRestrictionStatus” is “Failed”.
     */
    public function unsetLocationRestrictionDescription(): void
    {
        $this->locationRestrictionDescription = [];
    }

    /**
     * Returns Location Restriction Status.
     * Card Location restriction submitted to gateway based on gateway response value set as “Success” or
     * “Failed”.
     */
    public function getLocationRestrictionStatus(): ?string
    {
        if (count($this->locationRestrictionStatus) == 0) {
            return null;
        }
        return $this->locationRestrictionStatus['value'];
    }

    /**
     * Sets Location Restriction Status.
     * Card Location restriction submitted to gateway based on gateway response value set as “Success” or
     * “Failed”.
     *
     * @maps LocationRestrictionStatus
     */
    public function setLocationRestrictionStatus(?string $locationRestrictionStatus): void
    {
        $this->locationRestrictionStatus['value'] = $locationRestrictionStatus;
    }

    /**
     * Unsets Location Restriction Status.
     * Card Location restriction submitted to gateway based on gateway response value set as “Success” or
     * “Failed”.
     */
    public function unsetLocationRestrictionStatus(): void
    {
        $this->locationRestrictionStatus = [];
    }

    /**
     * Returns P AN.
     * Card PAN
     */
    public function getPAN(): ?string
    {
        if (count($this->pAN) == 0) {
            return null;
        }
        return $this->pAN['value'];
    }

    /**
     * Sets P AN.
     * Card PAN
     *
     * @maps PAN
     */
    public function setPAN(?string $pAN): void
    {
        $this->pAN['value'] = $pAN;
    }

    /**
     * Unsets P AN.
     * Card PAN
     */
    public function unsetPAN(): void
    {
        $this->pAN = [];
    }

    /**
     * Returns Product Restriction Description.
     * This field will have a value only when “ProductRestrictionStatus” is “Failed”.
     */
    public function getProductRestrictionDescription(): ?string
    {
        if (count($this->productRestrictionDescription) == 0) {
            return null;
        }
        return $this->productRestrictionDescription['value'];
    }

    /**
     * Sets Product Restriction Description.
     * This field will have a value only when “ProductRestrictionStatus” is “Failed”.
     *
     * @maps ProductRestrictionDescription
     */
    public function setProductRestrictionDescription(?string $productRestrictionDescription): void
    {
        $this->productRestrictionDescription['value'] = $productRestrictionDescription;
    }

    /**
     * Unsets Product Restriction Description.
     * This field will have a value only when “ProductRestrictionStatus” is “Failed”.
     */
    public function unsetProductRestrictionDescription(): void
    {
        $this->productRestrictionDescription = [];
    }

    /**
     * Returns Product Restriction Status.
     * Status of the card product restriction submitted
     */
    public function getProductRestrictionStatus(): ?string
    {
        if (count($this->productRestrictionStatus) == 0) {
            return null;
        }
        return $this->productRestrictionStatus['value'];
    }

    /**
     * Sets Product Restriction Status.
     * Status of the card product restriction submitted
     *
     * @maps ProductRestrictionStatus
     */
    public function setProductRestrictionStatus(?string $productRestrictionStatus): void
    {
        $this->productRestrictionStatus['value'] = $productRestrictionStatus;
    }

    /**
     * Unsets Product Restriction Status.
     * Status of the card product restriction submitted
     */
    public function unsetProductRestrictionStatus(): void
    {
        $this->productRestrictionStatus = [];
    }

    /**
     * Returns Usage Restriction Description.
     * This field will have a value only when “UsageRestrictionStatus” is “Failed”.
     */
    public function getUsageRestrictionDescription(): ?string
    {
        if (count($this->usageRestrictionDescription) == 0) {
            return null;
        }
        return $this->usageRestrictionDescription['value'];
    }

    /**
     * Sets Usage Restriction Description.
     * This field will have a value only when “UsageRestrictionStatus” is “Failed”.
     *
     * @maps UsageRestrictionDescription
     */
    public function setUsageRestrictionDescription(?string $usageRestrictionDescription): void
    {
        $this->usageRestrictionDescription['value'] = $usageRestrictionDescription;
    }

    /**
     * Unsets Usage Restriction Description.
     * This field will have a value only when “UsageRestrictionStatus” is “Failed”.
     */
    public function unsetUsageRestrictionDescription(): void
    {
        $this->usageRestrictionDescription = [];
    }

    /**
     * Returns Usage Restriction Status.
     * Status of the card usage restriction submitted
     */
    public function getUsageRestrictionStatus(): ?string
    {
        if (count($this->usageRestrictionStatus) == 0) {
            return null;
        }
        return $this->usageRestrictionStatus['value'];
    }

    /**
     * Sets Usage Restriction Status.
     * Status of the card usage restriction submitted
     *
     * @maps UsageRestrictionStatus
     */
    public function setUsageRestrictionStatus(?string $usageRestrictionStatus): void
    {
        $this->usageRestrictionStatus['value'] = $usageRestrictionStatus;
    }

    /**
     * Unsets Usage Restriction Status.
     * Status of the card usage restriction submitted
     */
    public function unsetUsageRestrictionStatus(): void
    {
        $this->usageRestrictionStatus = [];
    }

    /**
     * Returns Validation Error Code.
     * Error code for validation failure.
     *
     * Example error codes:
     *
     * 0007, 9007, 7000, 7001.
     */
    public function getValidationErrorCode(): ?string
    {
        if (count($this->validationErrorCode) == 0) {
            return null;
        }
        return $this->validationErrorCode['value'];
    }

    /**
     * Sets Validation Error Code.
     * Error code for validation failure.
     *
     * Example error codes:
     *
     * 0007, 9007, 7000, 7001.
     *
     * @maps ValidationErrorCode
     */
    public function setValidationErrorCode(?string $validationErrorCode): void
    {
        $this->validationErrorCode['value'] = $validationErrorCode;
    }

    /**
     * Unsets Validation Error Code.
     * Error code for validation failure.
     *
     * Example error codes:
     *
     * 0007, 9007, 7000, 7001.
     */
    public function unsetValidationErrorCode(): void
    {
        $this->validationErrorCode = [];
    }

    /**
     * Returns Validation Error Description.
     * Description of validation failure.
     */
    public function getValidationErrorDescription(): ?string
    {
        if (count($this->validationErrorDescription) == 0) {
            return null;
        }
        return $this->validationErrorDescription['value'];
    }

    /**
     * Sets Validation Error Description.
     * Description of validation failure.
     *
     * @maps ValidationErrorDescription
     */
    public function setValidationErrorDescription(?string $validationErrorDescription): void
    {
        $this->validationErrorDescription['value'] = $validationErrorDescription;
    }

    /**
     * Unsets Validation Error Description.
     * Description of validation failure.
     */
    public function unsetValidationErrorDescription(): void
    {
        $this->validationErrorDescription = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->accountId)) {
            $json['AccountId']                      = $this->accountId['value'];
        }
        if (!empty($this->accountNumber)) {
            $json['AccountNumber']                  = $this->accountNumber['value'];
        }
        if (!empty($this->cardId)) {
            $json['CardId']                         = $this->cardId['value'];
        }
        if (!empty($this->dayTimeRestrictionDescription)) {
            $json['DayTimeRestrictionDescription']  = $this->dayTimeRestrictionDescription['value'];
        }
        if (!empty($this->dayTimeRestrictionStatus)) {
            $json['DayTimeRestrictionStatus']       = $this->dayTimeRestrictionStatus['value'];
        }
        if (!empty($this->locationRestrictionDescription)) {
            $json['LocationRestrictionDescription'] = $this->locationRestrictionDescription['value'];
        }
        if (!empty($this->locationRestrictionStatus)) {
            $json['LocationRestrictionStatus']      = $this->locationRestrictionStatus['value'];
        }
        if (!empty($this->pAN)) {
            $json['PAN']                            = $this->pAN['value'];
        }
        if (!empty($this->productRestrictionDescription)) {
            $json['ProductRestrictionDescription']  = $this->productRestrictionDescription['value'];
        }
        if (!empty($this->productRestrictionStatus)) {
            $json['ProductRestrictionStatus']       = $this->productRestrictionStatus['value'];
        }
        if (!empty($this->usageRestrictionDescription)) {
            $json['UsageRestrictionDescription']    = $this->usageRestrictionDescription['value'];
        }
        if (!empty($this->usageRestrictionStatus)) {
            $json['UsageRestrictionStatus']         = $this->usageRestrictionStatus['value'];
        }
        if (!empty($this->validationErrorCode)) {
            $json['ValidationErrorCode']            = $this->validationErrorCode['value'];
        }
        if (!empty($this->validationErrorDescription)) {
            $json['ValidationErrorDescription']     = $this->validationErrorDescription['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
