<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

/**
 * This class holds the PIN Reminder References
 */
class PINReminderReference implements \JsonSerializable
{
    /**
     * @var array
     */
    private $cardId = [];

    /**
     * @var array
     */
    private $pANID = [];

    /**
     * @var array
     */
    private $pAN = [];

    /**
     * @var array
     */
    private $cardExpiryDate = [];

    /**
     * @var int|null
     */
    private $referenceId;

    /**
     * Returns Card Id.
     * Card Id
     */
    public function getCardId(): ?int
    {
        if (count($this->cardId) == 0) {
            return null;
        }
        return $this->cardId['value'];
    }

    /**
     * Sets Card Id.
     * Card Id
     *
     * @maps CardId
     */
    public function setCardId(?int $cardId): void
    {
        $this->cardId['value'] = $cardId;
    }

    /**
     * Unsets Card Id.
     * Card Id
     */
    public function unsetCardId(): void
    {
        $this->cardId = [];
    }

    /**
     * Returns P ANID.
     * PAN ID
     */
    public function getPANID(): ?int
    {
        if (count($this->pANID) == 0) {
            return null;
        }
        return $this->pANID['value'];
    }

    /**
     * Sets P ANID.
     * PAN ID
     *
     * @maps PANID
     */
    public function setPANID(?int $pANID): void
    {
        $this->pANID['value'] = $pANID;
    }

    /**
     * Unsets P ANID.
     * PAN ID
     */
    public function unsetPANID(): void
    {
        $this->pANID = [];
    }

    /**
     * Returns P AN.
     * PAN
     */
    public function getPAN(): ?int
    {
        if (count($this->pAN) == 0) {
            return null;
        }
        return $this->pAN['value'];
    }

    /**
     * Sets P AN.
     * PAN
     *
     * @maps PAN
     */
    public function setPAN(?int $pAN): void
    {
        $this->pAN['value'] = $pAN;
    }

    /**
     * Unsets P AN.
     * PAN
     */
    public function unsetPAN(): void
    {
        $this->pAN = [];
    }

    /**
     * Returns Card Expiry Date.
     * Expiry date of the card.
     *
     * Mandatory if Either PAN or PANID is passed, else optional.
     *
     * Format: yyyyMMdd
     */
    public function getCardExpiryDate(): ?string
    {
        if (count($this->cardExpiryDate) == 0) {
            return null;
        }
        return $this->cardExpiryDate['value'];
    }

    /**
     * Sets Card Expiry Date.
     * Expiry date of the card.
     *
     * Mandatory if Either PAN or PANID is passed, else optional.
     *
     * Format: yyyyMMdd
     *
     * @maps CardExpiryDate
     */
    public function setCardExpiryDate(?string $cardExpiryDate): void
    {
        $this->cardExpiryDate['value'] = $cardExpiryDate;
    }

    /**
     * Unsets Card Expiry Date.
     * Expiry date of the card.
     *
     * Mandatory if Either PAN or PANID is passed, else optional.
     *
     * Format: yyyyMMdd
     */
    public function unsetCardExpiryDate(): void
    {
        $this->cardExpiryDate = [];
    }

    /**
     * Returns Reference Id.
     * Individual card pin reminder reference number for the Pin Reminder request.
     */
    public function getReferenceId(): ?int
    {
        return $this->referenceId;
    }

    /**
     * Sets Reference Id.
     * Individual card pin reminder reference number for the Pin Reminder request.
     *
     * @maps ReferenceId
     */
    public function setReferenceId(?int $referenceId): void
    {
        $this->referenceId = $referenceId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->cardId)) {
            $json['CardId']         = $this->cardId['value'];
        }
        if (!empty($this->pANID)) {
            $json['PANID']          = $this->pANID['value'];
        }
        if (!empty($this->pAN)) {
            $json['PAN']            = $this->pAN['value'];
        }
        if (!empty($this->cardExpiryDate)) {
            $json['CardExpiryDate'] = $this->cardExpiryDate['value'];
        }
        if (isset($this->referenceId)) {
            $json['ReferenceId']    = $this->referenceId;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
