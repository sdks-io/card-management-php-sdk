<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\CardDetailsRequest;

/**
 * Builder for model CardDetailsRequest
 *
 * @see CardDetailsRequest
 */
class CardDetailsRequestBuilder
{
    /**
     * @var CardDetailsRequest
     */
    private $instance;

    private function __construct(CardDetailsRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new card details request Builder object.
     */
    public static function init(): self
    {
        return new self(new CardDetailsRequest());
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets col co country code field.
     */
    public function colCoCountryCode(?string $value): self
    {
        $this->instance->setColCoCountryCode($value);
        return $this;
    }

    /**
     * Unsets col co country code field.
     */
    public function unsetColCoCountryCode(): self
    {
        $this->instance->unsetColCoCountryCode();
        return $this;
    }

    /**
     * Sets client reference id field.
     */
    public function clientReferenceId(?string $value): self
    {
        $this->instance->setClientReferenceId($value);
        return $this;
    }

    /**
     * Unsets client reference id field.
     */
    public function unsetClientReferenceId(): self
    {
        $this->instance->unsetClientReferenceId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Unsets account id field.
     */
    public function unsetAccountId(): self
    {
        $this->instance->unsetAccountId();
        return $this;
    }

    /**
     * Sets pan field.
     */
    public function pAN(?string $value): self
    {
        $this->instance->setPAN($value);
        return $this;
    }

    /**
     * Unsets pan field.
     */
    public function unsetPAN(): self
    {
        $this->instance->unsetPAN();
        return $this;
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Unsets card id field.
     */
    public function unsetCardId(): self
    {
        $this->instance->unsetCardId();
        return $this;
    }

    /**
     * Sets token type id field.
     */
    public function tokenTypeID(?int $value): self
    {
        $this->instance->setTokenTypeID($value);
        return $this;
    }

    /**
     * Unsets token type id field.
     */
    public function unsetTokenTypeID(): self
    {
        $this->instance->unsetTokenTypeID();
        return $this;
    }

    /**
     * Sets token type name field.
     */
    public function tokenTypeName(?string $value): self
    {
        $this->instance->setTokenTypeName($value);
        return $this;
    }

    /**
     * Unsets token type name field.
     */
    public function unsetTokenTypeName(): self
    {
        $this->instance->unsetTokenTypeName();
        return $this;
    }

    /**
     * Sets creation date field.
     */
    public function creationDate(?string $value): self
    {
        $this->instance->setCreationDate($value);
        return $this;
    }

    /**
     * Unsets creation date field.
     */
    public function unsetCreationDate(): self
    {
        $this->instance->unsetCreationDate();
        return $this;
    }

    /**
     * Sets effective date field.
     */
    public function effectiveDate(?string $value): self
    {
        $this->instance->setEffectiveDate($value);
        return $this;
    }

    /**
     * Unsets effective date field.
     */
    public function unsetEffectiveDate(): self
    {
        $this->instance->unsetEffectiveDate();
        return $this;
    }

    /**
     * Sets include bundle details field.
     */
    public function includeBundleDetails(?bool $value): self
    {
        $this->instance->setIncludeBundleDetails($value);
        return $this;
    }

    /**
     * Sets include intermediate status field.
     */
    public function includeIntermediateStatus(?bool $value): self
    {
        $this->instance->setIncludeIntermediateStatus($value);
        return $this;
    }

    /**
     * Sets include scheduled card blocks field.
     */
    public function includeScheduledCardBlocks(?bool $value): self
    {
        $this->instance->setIncludeScheduledCardBlocks($value);
        return $this;
    }

    /**
     * Initializes a new card details request object.
     */
    public function build(): CardDetailsRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
