<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\AutoRenewCardRequestAutoRenewCardsItems;

/**
 * Builder for model AutoRenewCardRequestAutoRenewCardsItems
 *
 * @see AutoRenewCardRequestAutoRenewCardsItems
 */
class AutoRenewCardRequestAutoRenewCardsItemsBuilder
{
    /**
     * @var AutoRenewCardRequestAutoRenewCardsItems
     */
    private $instance;

    private function __construct(AutoRenewCardRequestAutoRenewCardsItems $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new auto renew card request auto renew cards items Builder object.
     */
    public static function init(bool $reissueSetting): self
    {
        return new self(new AutoRenewCardRequestAutoRenewCardsItems($reissueSetting));
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Sets pan field.
     */
    public function pAN(?string $value): self
    {
        $this->instance->setPAN($value);
        return $this;
    }

    /**
     * Sets panid field.
     */
    public function pANID(?float $value): self
    {
        $this->instance->setPANID($value);
        return $this;
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Initializes a new auto renew card request auto renew cards items object.
     */
    public function build(): AutoRenewCardRequestAutoRenewCardsItems
    {
        return CoreHelper::clone($this->instance);
    }
}
