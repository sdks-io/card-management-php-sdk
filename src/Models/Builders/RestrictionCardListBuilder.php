<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\RestrictionCardList;

/**
 * Builder for model RestrictionCardList
 *
 * @see RestrictionCardList
 */
class RestrictionCardListBuilder
{
    /**
     * @var RestrictionCardList
     */
    private $instance;

    private function __construct(RestrictionCardList $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new restriction card list Builder object.
     */
    public static function init(): self
    {
        return new self(new RestrictionCardList());
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Sets pan field.
     */
    public function pAN(?string $value): self
    {
        $this->instance->setPAN($value);
        return $this;
    }

    /**
     * Sets expiry date field.
     */
    public function expiryDate(?string $value): self
    {
        $this->instance->setExpiryDate($value);
        return $this;
    }

    /**
     * Sets status id field.
     */
    public function statusId(?int $value): self
    {
        $this->instance->setStatusId($value);
        return $this;
    }

    /**
     * Sets status description field.
     */
    public function statusDescription(?string $value): self
    {
        $this->instance->setStatusDescription($value);
        return $this;
    }

    /**
     * Sets driver name field.
     */
    public function driverName(?string $value): self
    {
        $this->instance->setDriverName($value);
        return $this;
    }

    /**
     * Sets vrn field.
     */
    public function vRN(?string $value): self
    {
        $this->instance->setVRN($value);
        return $this;
    }

    /**
     * Sets issue date field.
     */
    public function issueDate(?string $value): self
    {
        $this->instance->setIssueDate($value);
        return $this;
    }

    /**
     * Sets issue number field.
     */
    public function issueNumber(?int $value): self
    {
        $this->instance->setIssueNumber($value);
        return $this;
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets account short name field.
     */
    public function accountShortName(?string $value): self
    {
        $this->instance->setAccountShortName($value);
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Sets col co currency code field.
     */
    public function colCoCurrencyCode(?string $value): self
    {
        $this->instance->setColCoCurrencyCode($value);
        return $this;
    }

    /**
     * Sets col co currency symbol field.
     */
    public function colCoCurrencySymbol(?string $value): self
    {
        $this->instance->setColCoCurrencySymbol($value);
        return $this;
    }

    /**
     * Sets restriction currency code field.
     */
    public function restrictionCurrencyCode(?string $value): self
    {
        $this->instance->setRestrictionCurrencyCode($value);
        return $this;
    }

    /**
     * Sets restriction currency symbol field.
     */
    public function restrictionCurrencySymbol(?string $value): self
    {
        $this->instance->setRestrictionCurrencySymbol($value);
        return $this;
    }

    /**
     * Sets purchase category id field.
     */
    public function purchaseCategoryId(?string $value): self
    {
        $this->instance->setPurchaseCategoryId($value);
        return $this;
    }

    /**
     * Sets purchase category code field.
     */
    public function purchaseCategoryCode(?string $value): self
    {
        $this->instance->setPurchaseCategoryCode($value);
        return $this;
    }

    /**
     * Sets purchase category name field.
     */
    public function purchaseCategoryName(?string $value): self
    {
        $this->instance->setPurchaseCategoryName($value);
        return $this;
    }

    /**
     * Sets is superseded field.
     */
    public function isSuperseded(?bool $value): self
    {
        $this->instance->setIsSuperseded($value);
        return $this;
    }

    /**
     * Sets is virtual card field.
     */
    public function isVirtualCard(?bool $value): self
    {
        $this->instance->setIsVirtualCard($value);
        return $this;
    }

    /**
     * Sets is national field.
     */
    public function isNational(?bool $value): self
    {
        $this->instance->setIsNational($value);
        return $this;
    }

    /**
     * Sets is international field.
     */
    public function isInternational(?bool $value): self
    {
        $this->instance->setIsInternational($value);
        return $this;
    }

    /**
     * Sets is crt field.
     */
    public function isCRT(?bool $value): self
    {
        $this->instance->setIsCRT($value);
        return $this;
    }

    /**
     * Sets is fleet field.
     */
    public function isFleet(?bool $value): self
    {
        $this->instance->setIsFleet($value);
        return $this;
    }

    /**
     * Sets is shell sites only field.
     */
    public function isShellSitesOnly(?bool $value): self
    {
        $this->instance->setIsShellSitesOnly($value);
        return $this;
    }

    /**
     * Sets is partner sites included field.
     */
    public function isPartnerSitesIncluded(?bool $value): self
    {
        $this->instance->setIsPartnerSitesIncluded($value);
        return $this;
    }

    /**
     * Sets card type id field.
     */
    public function cardTypeId(?int $value): self
    {
        $this->instance->setCardTypeId($value);
        return $this;
    }

    /**
     * Sets card type code field.
     */
    public function cardTypeCode(?string $value): self
    {
        $this->instance->setCardTypeCode($value);
        return $this;
    }

    /**
     * Sets card type name field.
     */
    public function cardTypeName(?string $value): self
    {
        $this->instance->setCardTypeName($value);
        return $this;
    }

    /**
     * Sets bundle id field.
     */
    public function bundleId(?string $value): self
    {
        $this->instance->setBundleId($value);
        return $this;
    }

    /**
     * Sets medium type id field.
     */
    public function mediumTypeID(?int $value): self
    {
        $this->instance->setMediumTypeID($value);
        return $this;
    }

    /**
     * Sets medium type field.
     */
    public function mediumType(?string $value): self
    {
        $this->instance->setMediumType($value);
        return $this;
    }

    /**
     * Initializes a new restriction card list object.
     */
    public function build(): RestrictionCardList
    {
        return CoreHelper::clone($this->instance);
    }
}
