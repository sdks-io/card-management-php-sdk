<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\Filters1;

/**
 * Builder for model Filters1
 *
 * @see Filters1
 */
class Filters1Builder
{
    /**
     * @var Filters1
     */
    private $instance;

    private function __construct(Filters1 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new filters 1 Builder object.
     */
    public static function init(): self
    {
        return new self(new Filters1());
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Unsets account id field.
     */
    public function unsetAccountId(): self
    {
        $this->instance->unsetAccountId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets col co country code field.
     */
    public function colCoCountryCode(?string $value): self
    {
        $this->instance->setColCoCountryCode($value);
        return $this;
    }

    /**
     * Unsets col co country code field.
     */
    public function unsetColCoCountryCode(): self
    {
        $this->instance->unsetColCoCountryCode();
        return $this;
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets card group id field.
     */
    public function cardGroupId(?int $value): self
    {
        $this->instance->setCardGroupId($value);
        return $this;
    }

    /**
     * Unsets card group id field.
     */
    public function unsetCardGroupId(): self
    {
        $this->instance->unsetCardGroupId();
        return $this;
    }

    /**
     * Sets card group name field.
     */
    public function cardGroupName(?string $value): self
    {
        $this->instance->setCardGroupName($value);
        return $this;
    }

    /**
     * Unsets card group name field.
     */
    public function unsetCardGroupName(): self
    {
        $this->instance->unsetCardGroupName();
        return $this;
    }

    /**
     * Sets card status field.
     */
    public function cardStatus(?array $value): self
    {
        $this->instance->setCardStatus($value);
        return $this;
    }

    /**
     * Sets expiring in days field.
     */
    public function expiringInDays(?int $value): self
    {
        $this->instance->setExpiringInDays($value);
        return $this;
    }

    /**
     * Unsets expiring in days field.
     */
    public function unsetExpiringInDays(): self
    {
        $this->instance->unsetExpiringInDays();
        return $this;
    }

    /**
     * Sets issued after field.
     */
    public function issuedAfter(?string $value): self
    {
        $this->instance->setIssuedAfter($value);
        return $this;
    }

    /**
     * Unsets issued after field.
     */
    public function unsetIssuedAfter(): self
    {
        $this->instance->unsetIssuedAfter();
        return $this;
    }

    /**
     * Sets panends with field.
     */
    public function pANEndsWith(?string $value): self
    {
        $this->instance->setPANEndsWith($value);
        return $this;
    }

    /**
     * Unsets panends with field.
     */
    public function unsetPANEndsWith(): self
    {
        $this->instance->unsetPANEndsWith();
        return $this;
    }

    /**
     * Sets driver name field.
     */
    public function driverName(?array $value): self
    {
        $this->instance->setDriverName($value);
        return $this;
    }

    /**
     * Sets vehicle registration number field.
     */
    public function vehicleRegistrationNumber(?array $value): self
    {
        $this->instance->setVehicleRegistrationNumber($value);
        return $this;
    }

    /**
     * Sets include cards field.
     */
    public function includeCards(?array $value): self
    {
        $this->instance->setIncludeCards($value);
        return $this;
    }

    /**
     * Sets exclude cards field.
     */
    public function excludeCards(?array $value): self
    {
        $this->instance->setExcludeCards($value);
        return $this;
    }

    /**
     * Sets exclude bundle id field.
     */
    public function excludeBundleId(?string $value): self
    {
        $this->instance->setExcludeBundleId($value);
        return $this;
    }

    /**
     * Unsets exclude bundle id field.
     */
    public function unsetExcludeBundleId(): self
    {
        $this->instance->unsetExcludeBundleId();
        return $this;
    }

    /**
     * Sets card segment field.
     */
    public function cardSegment(?string $value): self
    {
        $this->instance->setCardSegment($value);
        return $this;
    }

    /**
     * Unsets card segment field.
     */
    public function unsetCardSegment(): self
    {
        $this->instance->unsetCardSegment();
        return $this;
    }

    /**
     * Sets purchase category code field.
     */
    public function purchaseCategoryCode(?string $value): self
    {
        $this->instance->setPurchaseCategoryCode($value);
        return $this;
    }

    /**
     * Unsets purchase category code field.
     */
    public function unsetPurchaseCategoryCode(): self
    {
        $this->instance->unsetPurchaseCategoryCode();
        return $this;
    }

    /**
     * Sets card type code field.
     */
    public function cardTypeCode(?string $value): self
    {
        $this->instance->setCardTypeCode($value);
        return $this;
    }

    /**
     * Unsets card type code field.
     */
    public function unsetCardTypeCode(): self
    {
        $this->instance->unsetCardTypeCode();
        return $this;
    }

    /**
     * Sets exclude pending renewal cards field.
     */
    public function excludePendingRenewalCards(?bool $value): self
    {
        $this->instance->setExcludePendingRenewalCards($value);
        return $this;
    }

    /**
     * Sets exclude cancelled cards field.
     */
    public function excludeCancelledCards(?bool $value): self
    {
        $this->instance->setExcludeCancelledCards($value);
        return $this;
    }

    /**
     * Sets exclude replaced cards field.
     */
    public function excludeReplacedCards(?bool $value): self
    {
        $this->instance->setExcludeReplacedCards($value);
        return $this;
    }

    /**
     * Sets exclude fraud cards field.
     */
    public function excludeFraudCards(?bool $value): self
    {
        $this->instance->setExcludeFraudCards($value);
        return $this;
    }

    /**
     * Sets exclude card group id field.
     */
    public function excludeCardGroupId(?int $value): self
    {
        $this->instance->setExcludeCardGroupId($value);
        return $this;
    }

    /**
     * Unsets exclude card group id field.
     */
    public function unsetExcludeCardGroupId(): self
    {
        $this->instance->unsetExcludeCardGroupId();
        return $this;
    }

    /**
     * Sets exclude card group name field.
     */
    public function excludeCardGroupName(?string $value): self
    {
        $this->instance->setExcludeCardGroupName($value);
        return $this;
    }

    /**
     * Unsets exclude card group name field.
     */
    public function unsetExcludeCardGroupName(): self
    {
        $this->instance->unsetExcludeCardGroupName();
        return $this;
    }

    /**
     * Sets creation date field.
     */
    public function creationDate(?string $value): self
    {
        $this->instance->setCreationDate($value);
        return $this;
    }

    /**
     * Unsets creation date field.
     */
    public function unsetCreationDate(): self
    {
        $this->instance->unsetCreationDate();
        return $this;
    }

    /**
     * Sets effective date field.
     */
    public function effectiveDate(?string $value): self
    {
        $this->instance->setEffectiveDate($value);
        return $this;
    }

    /**
     * Unsets effective date field.
     */
    public function unsetEffectiveDate(): self
    {
        $this->instance->unsetEffectiveDate();
        return $this;
    }

    /**
     * Sets network field.
     */
    public function network(?string $value): self
    {
        $this->instance->setNetwork($value);
        return $this;
    }

    /**
     * Unsets network field.
     */
    public function unsetNetwork(): self
    {
        $this->instance->unsetNetwork();
        return $this;
    }

    /**
     * Sets coverage field.
     */
    public function coverage(?string $value): self
    {
        $this->instance->setCoverage($value);
        return $this;
    }

    /**
     * Unsets coverage field.
     */
    public function unsetCoverage(): self
    {
        $this->instance->unsetCoverage();
        return $this;
    }

    /**
     * Sets expiry month field.
     */
    public function expiryMonth(?string $value): self
    {
        $this->instance->setExpiryMonth($value);
        return $this;
    }

    /**
     * Unsets expiry month field.
     */
    public function unsetExpiryMonth(): self
    {
        $this->instance->unsetExpiryMonth();
        return $this;
    }

    /**
     * Sets exclude old cards field.
     */
    public function excludeOldCards(?bool $value): self
    {
        $this->instance->setExcludeOldCards($value);
        return $this;
    }

    /**
     * Sets reissue setting field.
     */
    public function reissueSetting(?string $value): self
    {
        $this->instance->setReissueSetting($value);
        return $this;
    }

    /**
     * Unsets reissue setting field.
     */
    public function unsetReissueSetting(): self
    {
        $this->instance->unsetReissueSetting();
        return $this;
    }

    /**
     * Sets request id field.
     */
    public function requestId(?string $value): self
    {
        $this->instance->setRequestId($value);
        return $this;
    }

    /**
     * Initializes a new filters 1 object.
     */
    public function build(): Filters1
    {
        return CoreHelper::clone($this->instance);
    }
}
