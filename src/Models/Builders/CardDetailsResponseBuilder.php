<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\CardDetailsResponse;
use ShellCardManagementAPIsLib\Models\CardDetailsResponseCardDeliveryAddress;
use ShellCardManagementAPIsLib\Models\CardDetailsResponsePINDeliveryAddress;
use ShellCardManagementAPIsLib\Models\ErrorStatus;

/**
 * Builder for model CardDetailsResponse
 *
 * @see CardDetailsResponse
 */
class CardDetailsResponseBuilder
{
    /**
     * @var CardDetailsResponse
     */
    private $instance;

    private function __construct(CardDetailsResponse $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new card details response Builder object.
     */
    public static function init(): self
    {
        return new self(new CardDetailsResponse());
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Unsets account id field.
     */
    public function unsetAccountId(): self
    {
        $this->instance->unsetAccountId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets account short name field.
     */
    public function accountShortName(?string $value): self
    {
        $this->instance->setAccountShortName($value);
        return $this;
    }

    /**
     * Unsets account short name field.
     */
    public function unsetAccountShortName(): self
    {
        $this->instance->unsetAccountShortName();
        return $this;
    }

    /**
     * Sets col co country code field.
     */
    public function colCoCountryCode(?string $value): self
    {
        $this->instance->setColCoCountryCode($value);
        return $this;
    }

    /**
     * Unsets col co country code field.
     */
    public function unsetColCoCountryCode(): self
    {
        $this->instance->unsetColCoCountryCode();
        return $this;
    }

    /**
     * Sets local currency code field.
     */
    public function localCurrencyCode(?string $value): self
    {
        $this->instance->setLocalCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets local currency code field.
     */
    public function unsetLocalCurrencyCode(): self
    {
        $this->instance->unsetLocalCurrencyCode();
        return $this;
    }

    /**
     * Sets local currency symbol field.
     */
    public function localCurrencySymbol(?string $value): self
    {
        $this->instance->setLocalCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets local currency symbol field.
     */
    public function unsetLocalCurrencySymbol(): self
    {
        $this->instance->unsetLocalCurrencySymbol();
        return $this;
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Sets pan field.
     */
    public function pAN(?string $value): self
    {
        $this->instance->setPAN($value);
        return $this;
    }

    /**
     * Unsets pan field.
     */
    public function unsetPAN(): self
    {
        $this->instance->unsetPAN();
        return $this;
    }

    /**
     * Sets status id field.
     */
    public function statusId(?int $value): self
    {
        $this->instance->setStatusId($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets odometer prompt field.
     */
    public function odometerPrompt(?bool $value): self
    {
        $this->instance->setOdometerPrompt($value);
        return $this;
    }

    /**
     * Sets fleet id prompt field.
     */
    public function fleetIdPrompt(?bool $value): self
    {
        $this->instance->setFleetIdPrompt($value);
        return $this;
    }

    /**
     * Sets pintype field.
     */
    public function pINType(?string $value): self
    {
        $this->instance->setPINType($value);
        return $this;
    }

    /**
     * Sets has pin field.
     */
    public function hasPIN(?bool $value): self
    {
        $this->instance->setHasPIN($value);
        return $this;
    }

    /**
     * Sets is self selected pin field.
     */
    public function isSelfSelectedPIN(?bool $value): self
    {
        $this->instance->setIsSelfSelectedPIN($value);
        return $this;
    }

    /**
     * Sets temporary block allowed field.
     */
    public function temporaryBlockAllowed(?bool $value): self
    {
        $this->instance->setTemporaryBlockAllowed($value);
        return $this;
    }

    /**
     * Sets unblock allowed field.
     */
    public function unblockAllowed(?bool $value): self
    {
        $this->instance->setUnblockAllowed($value);
        return $this;
    }

    /**
     * Sets permanent block allowed field.
     */
    public function permanentBlockAllowed(?bool $value): self
    {
        $this->instance->setPermanentBlockAllowed($value);
        return $this;
    }

    /**
     * Sets issue number field.
     */
    public function issueNumber(?int $value): self
    {
        $this->instance->setIssueNumber($value);
        return $this;
    }

    /**
     * Sets reissue setting field.
     */
    public function reissueSetting(?string $value): self
    {
        $this->instance->setReissueSetting($value);
        return $this;
    }

    /**
     * Unsets reissue setting field.
     */
    public function unsetReissueSetting(): self
    {
        $this->instance->unsetReissueSetting();
        return $this;
    }

    /**
     * Sets international poslanguage id field.
     */
    public function internationalPOSLanguageID(?int $value): self
    {
        $this->instance->setInternationalPOSLanguageID($value);
        return $this;
    }

    /**
     * Sets international poslanguage code field.
     */
    public function internationalPOSLanguageCode(?string $value): self
    {
        $this->instance->setInternationalPOSLanguageCode($value);
        return $this;
    }

    /**
     * Sets local poslanguage id field.
     */
    public function localPOSLanguageID(?int $value): self
    {
        $this->instance->setLocalPOSLanguageID($value);
        return $this;
    }

    /**
     * Sets local poslanguage code field.
     */
    public function localPOSLanguageCode(?string $value): self
    {
        $this->instance->setLocalPOSLanguageCode($value);
        return $this;
    }

    /**
     * Sets card type code field.
     */
    public function cardTypeCode(?string $value): self
    {
        $this->instance->setCardTypeCode($value);
        return $this;
    }

    /**
     * Unsets card type code field.
     */
    public function unsetCardTypeCode(): self
    {
        $this->instance->unsetCardTypeCode();
        return $this;
    }

    /**
     * Sets card type id field.
     */
    public function cardTypeId(?int $value): self
    {
        $this->instance->setCardTypeId($value);
        return $this;
    }

    /**
     * Unsets card type id field.
     */
    public function unsetCardTypeId(): self
    {
        $this->instance->unsetCardTypeId();
        return $this;
    }

    /**
     * Sets card type name field.
     */
    public function cardTypeName(?string $value): self
    {
        $this->instance->setCardTypeName($value);
        return $this;
    }

    /**
     * Unsets card type name field.
     */
    public function unsetCardTypeName(): self
    {
        $this->instance->unsetCardTypeName();
        return $this;
    }

    /**
     * Sets token type id field.
     */
    public function tokenTypeId(?int $value): self
    {
        $this->instance->setTokenTypeId($value);
        return $this;
    }

    /**
     * Unsets token type id field.
     */
    public function unsetTokenTypeId(): self
    {
        $this->instance->unsetTokenTypeId();
        return $this;
    }

    /**
     * Sets token type name field.
     */
    public function tokenTypeName(?string $value): self
    {
        $this->instance->setTokenTypeName($value);
        return $this;
    }

    /**
     * Unsets token type name field.
     */
    public function unsetTokenTypeName(): self
    {
        $this->instance->unsetTokenTypeName();
        return $this;
    }

    /**
     * Sets is chip card field.
     */
    public function isChipCard(?bool $value): self
    {
        $this->instance->setIsChipCard($value);
        return $this;
    }

    /**
     * Sets is mag strip card field.
     */
    public function isMagStripCard(?bool $value): self
    {
        $this->instance->setIsMagStripCard($value);
        return $this;
    }

    /**
     * Sets is virtual card field.
     */
    public function isVirtualCard(?bool $value): self
    {
        $this->instance->setIsVirtualCard($value);
        return $this;
    }

    /**
     * Sets purchase category code field.
     */
    public function purchaseCategoryCode(?string $value): self
    {
        $this->instance->setPurchaseCategoryCode($value);
        return $this;
    }

    /**
     * Unsets purchase category code field.
     */
    public function unsetPurchaseCategoryCode(): self
    {
        $this->instance->unsetPurchaseCategoryCode();
        return $this;
    }

    /**
     * Sets purchase category id field.
     */
    public function purchaseCategoryId(?int $value): self
    {
        $this->instance->setPurchaseCategoryId($value);
        return $this;
    }

    /**
     * Sets purchase category name field.
     */
    public function purchaseCategoryName(?string $value): self
    {
        $this->instance->setPurchaseCategoryName($value);
        return $this;
    }

    /**
     * Unsets purchase category name field.
     */
    public function unsetPurchaseCategoryName(): self
    {
        $this->instance->unsetPurchaseCategoryName();
        return $this;
    }

    /**
     * Sets is crt field.
     */
    public function isCRT(?bool $value): self
    {
        $this->instance->setIsCRT($value);
        return $this;
    }

    /**
     * Sets is fleet field.
     */
    public function isFleet(?bool $value): self
    {
        $this->instance->setIsFleet($value);
        return $this;
    }

    /**
     * Sets is international field.
     */
    public function isInternational(?bool $value): self
    {
        $this->instance->setIsInternational($value);
        return $this;
    }

    /**
     * Sets is national field.
     */
    public function isNational(?bool $value): self
    {
        $this->instance->setIsNational($value);
        return $this;
    }

    /**
     * Sets is partner sites included field.
     */
    public function isPartnerSitesIncluded(?bool $value): self
    {
        $this->instance->setIsPartnerSitesIncluded($value);
        return $this;
    }

    /**
     * Sets is shell sites only field.
     */
    public function isShellSitesOnly(?bool $value): self
    {
        $this->instance->setIsShellSitesOnly($value);
        return $this;
    }

    /**
     * Sets fuel sets field.
     */
    public function fuelSets(?array $value): self
    {
        $this->instance->setFuelSets($value);
        return $this;
    }

    /**
     * Sets non fuel sets field.
     */
    public function nonFuelSets(?array $value): self
    {
        $this->instance->setNonFuelSets($value);
        return $this;
    }

    /**
     * Sets issued date field.
     */
    public function issuedDate(?string $value): self
    {
        $this->instance->setIssuedDate($value);
        return $this;
    }

    /**
     * Unsets issued date field.
     */
    public function unsetIssuedDate(): self
    {
        $this->instance->unsetIssuedDate();
        return $this;
    }

    /**
     * Sets expiry date field.
     */
    public function expiryDate(?string $value): self
    {
        $this->instance->setExpiryDate($value);
        return $this;
    }

    /**
     * Sets last used date field.
     */
    public function lastUsedDate(?string $value): self
    {
        $this->instance->setLastUsedDate($value);
        return $this;
    }

    /**
     * Unsets last used date field.
     */
    public function unsetLastUsedDate(): self
    {
        $this->instance->unsetLastUsedDate();
        return $this;
    }

    /**
     * Sets misuse date field.
     */
    public function misuseDate(?string $value): self
    {
        $this->instance->setMisuseDate($value);
        return $this;
    }

    /**
     * Unsets misuse date field.
     */
    public function unsetMisuseDate(): self
    {
        $this->instance->unsetMisuseDate();
        return $this;
    }

    /**
     * Sets temperature field.
     */
    public function temperature(?string $value): self
    {
        $this->instance->setTemperature($value);
        return $this;
    }

    /**
     * Unsets temperature field.
     */
    public function unsetTemperature(): self
    {
        $this->instance->unsetTemperature();
        return $this;
    }

    /**
     * Sets driver name field.
     */
    public function driverName(?string $value): self
    {
        $this->instance->setDriverName($value);
        return $this;
    }

    /**
     * Sets vrn field.
     */
    public function vRN(?string $value): self
    {
        $this->instance->setVRN($value);
        return $this;
    }

    /**
     * Sets emboss text field.
     */
    public function embossText(?string $value): self
    {
        $this->instance->setEmbossText($value);
        return $this;
    }

    /**
     * Sets card group id field.
     */
    public function cardGroupId(?int $value): self
    {
        $this->instance->setCardGroupId($value);
        return $this;
    }

    /**
     * Unsets card group id field.
     */
    public function unsetCardGroupId(): self
    {
        $this->instance->unsetCardGroupId();
        return $this;
    }

    /**
     * Sets card group name field.
     */
    public function cardGroupName(?string $value): self
    {
        $this->instance->setCardGroupName($value);
        return $this;
    }

    /**
     * Unsets card group name field.
     */
    public function unsetCardGroupName(): self
    {
        $this->instance->unsetCardGroupName();
        return $this;
    }

    /**
     * Sets renewal date field.
     */
    public function renewalDate(?string $value): self
    {
        $this->instance->setRenewalDate($value);
        return $this;
    }

    /**
     * Unsets renewal date field.
     */
    public function unsetRenewalDate(): self
    {
        $this->instance->unsetRenewalDate();
        return $this;
    }

    /**
     * Sets renewed card id field.
     */
    public function renewedCardId(?int $value): self
    {
        $this->instance->setRenewedCardId($value);
        return $this;
    }

    /**
     * Unsets renewed card id field.
     */
    public function unsetRenewedCardId(): self
    {
        $this->instance->unsetRenewedCardId();
        return $this;
    }

    /**
     * Sets renewed card status id field.
     */
    public function renewedCardStatusId(?int $value): self
    {
        $this->instance->setRenewedCardStatusId($value);
        return $this;
    }

    /**
     * Unsets renewed card status id field.
     */
    public function unsetRenewedCardStatusId(): self
    {
        $this->instance->unsetRenewedCardStatusId();
        return $this;
    }

    /**
     * Sets renewed card status field.
     */
    public function renewedCardStatus(?string $value): self
    {
        $this->instance->setRenewedCardStatus($value);
        return $this;
    }

    /**
     * Sets renewed card expiry date field.
     */
    public function renewedCardExpiryDate(?string $value): self
    {
        $this->instance->setRenewedCardExpiryDate($value);
        return $this;
    }

    /**
     * Sets renewed card issue number field.
     */
    public function renewedCardIssueNumber(?int $value): self
    {
        $this->instance->setRenewedCardIssueNumber($value);
        return $this;
    }

    /**
     * Unsets renewed card issue number field.
     */
    public function unsetRenewedCardIssueNumber(): self
    {
        $this->instance->unsetRenewedCardIssueNumber();
        return $this;
    }

    /**
     * Sets renewed card reissue setting field.
     */
    public function renewedCardReissueSetting(?string $value): self
    {
        $this->instance->setRenewedCardReissueSetting($value);
        return $this;
    }

    /**
     * Sets creation date field.
     */
    public function creationDate(?string $value): self
    {
        $this->instance->setCreationDate($value);
        return $this;
    }

    /**
     * Unsets creation date field.
     */
    public function unsetCreationDate(): self
    {
        $this->instance->unsetCreationDate();
        return $this;
    }

    /**
     * Sets effective date field.
     */
    public function effectiveDate(?string $value): self
    {
        $this->instance->setEffectiveDate($value);
        return $this;
    }

    /**
     * Unsets effective date field.
     */
    public function unsetEffectiveDate(): self
    {
        $this->instance->unsetEffectiveDate();
        return $this;
    }

    /**
     * Sets last modified date field.
     */
    public function lastModifiedDate(?string $value): self
    {
        $this->instance->setLastModifiedDate($value);
        return $this;
    }

    /**
     * Unsets last modified date field.
     */
    public function unsetLastModifiedDate(): self
    {
        $this->instance->unsetLastModifiedDate();
        return $this;
    }

    /**
     * Sets bundle id field.
     */
    public function bundleId(?string $value): self
    {
        $this->instance->setBundleId($value);
        return $this;
    }

    /**
     * Unsets bundle id field.
     */
    public function unsetBundleId(): self
    {
        $this->instance->unsetBundleId();
        return $this;
    }

    /**
     * Sets card delivery address field.
     */
    public function cardDeliveryAddress(?CardDetailsResponseCardDeliveryAddress $value): self
    {
        $this->instance->setCardDeliveryAddress($value);
        return $this;
    }

    /**
     * Sets pindelivery address field.
     */
    public function pINDeliveryAddress(?CardDetailsResponsePINDeliveryAddress $value): self
    {
        $this->instance->setPINDeliveryAddress($value);
        return $this;
    }

    /**
     * Sets card block schedules field.
     */
    public function cardBlockSchedules(?array $value): self
    {
        $this->instance->setCardBlockSchedules($value);
        return $this;
    }

    /**
     * Unsets card block schedules field.
     */
    public function unsetCardBlockSchedules(): self
    {
        $this->instance->unsetCardBlockSchedules();
        return $this;
    }

    /**
     * Sets error field.
     */
    public function error(?ErrorStatus $value): self
    {
        $this->instance->setError($value);
        return $this;
    }

    /**
     * Sets request id field.
     */
    public function requestId(?string $value): self
    {
        $this->instance->setRequestId($value);
        return $this;
    }

    /**
     * Initializes a new card details response object.
     */
    public function build(): CardDetailsResponse
    {
        return CoreHelper::clone($this->instance);
    }
}
