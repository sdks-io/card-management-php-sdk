<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\RestrictionSearchCardResponseDataItems;
use ShellCardManagementAPIsLib\Models\SearchCardResponseRestrictions;

/**
 * Builder for model RestrictionSearchCardResponseDataItems
 *
 * @see RestrictionSearchCardResponseDataItems
 */
class RestrictionSearchCardResponseDataItemsBuilder
{
    /**
     * @var RestrictionSearchCardResponseDataItems
     */
    private $instance;

    private function __construct(RestrictionSearchCardResponseDataItems $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new restriction search card response data items Builder object.
     */
    public static function init(): self
    {
        return new self(new RestrictionSearchCardResponseDataItems());
    }

    /**
     * Sets bundle id field.
     */
    public function bundleId(?int $value): self
    {
        $this->instance->setBundleId($value);
        return $this;
    }

    /**
     * Sets restrictions field.
     */
    public function restrictions(?SearchCardResponseRestrictions $value): self
    {
        $this->instance->setRestrictions($value);
        return $this;
    }

    /**
     * Sets restriction currency code field.
     */
    public function restrictionCurrencyCode(?string $value): self
    {
        $this->instance->setRestrictionCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets restriction currency code field.
     */
    public function unsetRestrictionCurrencyCode(): self
    {
        $this->instance->unsetRestrictionCurrencyCode();
        return $this;
    }

    /**
     * Sets restriction currency symbol field.
     */
    public function restrictionCurrencySymbol(?string $value): self
    {
        $this->instance->setRestrictionCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets restriction currency symbol field.
     */
    public function unsetRestrictionCurrencySymbol(): self
    {
        $this->instance->unsetRestrictionCurrencySymbol();
        return $this;
    }

    /**
     * Sets account id field.
     */
    public function accountId(?int $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Unsets account id field.
     */
    public function unsetAccountId(): self
    {
        $this->instance->unsetAccountId();
        return $this;
    }

    /**
     * Sets account name field.
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Unsets account name field.
     */
    public function unsetAccountName(): self
    {
        $this->instance->unsetAccountName();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets account short name field.
     */
    public function accountShortName(?string $value): self
    {
        $this->instance->setAccountShortName($value);
        return $this;
    }

    /**
     * Unsets account short name field.
     */
    public function unsetAccountShortName(): self
    {
        $this->instance->unsetAccountShortName();
        return $this;
    }

    /**
     * Sets card id field.
     */
    public function cardId(?int $value): self
    {
        $this->instance->setCardId($value);
        return $this;
    }

    /**
     * Unsets card id field.
     */
    public function unsetCardId(): self
    {
        $this->instance->unsetCardId();
        return $this;
    }

    /**
     * Sets card type code field.
     */
    public function cardTypeCode(?string $value): self
    {
        $this->instance->setCardTypeCode($value);
        return $this;
    }

    /**
     * Unsets card type code field.
     */
    public function unsetCardTypeCode(): self
    {
        $this->instance->unsetCardTypeCode();
        return $this;
    }

    /**
     * Sets card type id field.
     */
    public function cardTypeId(?int $value): self
    {
        $this->instance->setCardTypeId($value);
        return $this;
    }

    /**
     * Unsets card type id field.
     */
    public function unsetCardTypeId(): self
    {
        $this->instance->unsetCardTypeId();
        return $this;
    }

    /**
     * Sets card type name field.
     */
    public function cardTypeName(?string $value): self
    {
        $this->instance->setCardTypeName($value);
        return $this;
    }

    /**
     * Unsets card type name field.
     */
    public function unsetCardTypeName(): self
    {
        $this->instance->unsetCardTypeName();
        return $this;
    }

    /**
     * Sets col co currency code field.
     */
    public function colCoCurrencyCode(?string $value): self
    {
        $this->instance->setColCoCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets col co currency code field.
     */
    public function unsetColCoCurrencyCode(): self
    {
        $this->instance->unsetColCoCurrencyCode();
        return $this;
    }

    /**
     * Sets col co currency symbol field.
     */
    public function colCoCurrencySymbol(?string $value): self
    {
        $this->instance->setColCoCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets col co currency symbol field.
     */
    public function unsetColCoCurrencySymbol(): self
    {
        $this->instance->unsetColCoCurrencySymbol();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?string $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets currency symbol field.
     */
    public function currencySymbol(?string $value): self
    {
        $this->instance->setCurrencySymbol($value);
        return $this;
    }

    /**
     * Unsets currency symbol field.
     */
    public function unsetCurrencySymbol(): self
    {
        $this->instance->unsetCurrencySymbol();
        return $this;
    }

    /**
     * Sets driver name field.
     */
    public function driverName(?string $value): self
    {
        $this->instance->setDriverName($value);
        return $this;
    }

    /**
     * Unsets driver name field.
     */
    public function unsetDriverName(): self
    {
        $this->instance->unsetDriverName();
        return $this;
    }

    /**
     * Sets expiry date field.
     */
    public function expiryDate(?string $value): self
    {
        $this->instance->setExpiryDate($value);
        return $this;
    }

    /**
     * Unsets expiry date field.
     */
    public function unsetExpiryDate(): self
    {
        $this->instance->unsetExpiryDate();
        return $this;
    }

    /**
     * Sets is crt field.
     */
    public function isCRT(?bool $value): self
    {
        $this->instance->setIsCRT($value);
        return $this;
    }

    /**
     * Sets is fleet field.
     */
    public function isFleet(?bool $value): self
    {
        $this->instance->setIsFleet($value);
        return $this;
    }

    /**
     * Sets is international field.
     */
    public function isInternational(?bool $value): self
    {
        $this->instance->setIsInternational($value);
        return $this;
    }

    /**
     * Sets is national field.
     */
    public function isNational(?bool $value): self
    {
        $this->instance->setIsNational($value);
        return $this;
    }

    /**
     * Sets is partner sites included field.
     */
    public function isPartnerSitesIncluded(?bool $value): self
    {
        $this->instance->setIsPartnerSitesIncluded($value);
        return $this;
    }

    /**
     * Sets is shell sites only field.
     */
    public function isShellSitesOnly(?bool $value): self
    {
        $this->instance->setIsShellSitesOnly($value);
        return $this;
    }

    /**
     * Sets issue date field.
     */
    public function issueDate(?string $value): self
    {
        $this->instance->setIssueDate($value);
        return $this;
    }

    /**
     * Unsets issue date field.
     */
    public function unsetIssueDate(): self
    {
        $this->instance->unsetIssueDate();
        return $this;
    }

    /**
     * Sets issue number field.
     */
    public function issueNumber(?int $value): self
    {
        $this->instance->setIssueNumber($value);
        return $this;
    }

    /**
     * Unsets issue number field.
     */
    public function unsetIssueNumber(): self
    {
        $this->instance->unsetIssueNumber();
        return $this;
    }

    /**
     * Sets is superseded field.
     */
    public function isSuperseded(?bool $value): self
    {
        $this->instance->setIsSuperseded($value);
        return $this;
    }

    /**
     * Sets is virtual card field.
     */
    public function isVirtualCard(?bool $value): self
    {
        $this->instance->setIsVirtualCard($value);
        return $this;
    }

    /**
     * Sets pan field.
     */
    public function pAN(?string $value): self
    {
        $this->instance->setPAN($value);
        return $this;
    }

    /**
     * Unsets pan field.
     */
    public function unsetPAN(): self
    {
        $this->instance->unsetPAN();
        return $this;
    }

    /**
     * Sets purchase category code field.
     */
    public function purchaseCategoryCode(?string $value): self
    {
        $this->instance->setPurchaseCategoryCode($value);
        return $this;
    }

    /**
     * Unsets purchase category code field.
     */
    public function unsetPurchaseCategoryCode(): self
    {
        $this->instance->unsetPurchaseCategoryCode();
        return $this;
    }

    /**
     * Sets purchase category id field.
     */
    public function purchaseCategoryId(?int $value): self
    {
        $this->instance->setPurchaseCategoryId($value);
        return $this;
    }

    /**
     * Unsets purchase category id field.
     */
    public function unsetPurchaseCategoryId(): self
    {
        $this->instance->unsetPurchaseCategoryId();
        return $this;
    }

    /**
     * Sets purchase category name field.
     */
    public function purchaseCategoryName(?string $value): self
    {
        $this->instance->setPurchaseCategoryName($value);
        return $this;
    }

    /**
     * Unsets purchase category name field.
     */
    public function unsetPurchaseCategoryName(): self
    {
        $this->instance->unsetPurchaseCategoryName();
        return $this;
    }

    /**
     * Sets status description field.
     */
    public function statusDescription(?string $value): self
    {
        $this->instance->setStatusDescription($value);
        return $this;
    }

    /**
     * Unsets status description field.
     */
    public function unsetStatusDescription(): self
    {
        $this->instance->unsetStatusDescription();
        return $this;
    }

    /**
     * Sets status id field.
     */
    public function statusId(?int $value): self
    {
        $this->instance->setStatusId($value);
        return $this;
    }

    /**
     * Unsets status id field.
     */
    public function unsetStatusId(): self
    {
        $this->instance->unsetStatusId();
        return $this;
    }

    /**
     * Sets vrn field.
     */
    public function vRN(?string $value): self
    {
        $this->instance->setVRN($value);
        return $this;
    }

    /**
     * Unsets vrn field.
     */
    public function unsetVRN(): self
    {
        $this->instance->unsetVRN();
        return $this;
    }

    /**
     * Sets medium type id field.
     */
    public function mediumTypeID(?int $value): self
    {
        $this->instance->setMediumTypeID($value);
        return $this;
    }

    /**
     * Unsets medium type id field.
     */
    public function unsetMediumTypeID(): self
    {
        $this->instance->unsetMediumTypeID();
        return $this;
    }

    /**
     * Sets medium type field.
     */
    public function mediumType(?string $value): self
    {
        $this->instance->setMediumType($value);
        return $this;
    }

    /**
     * Unsets medium type field.
     */
    public function unsetMediumType(): self
    {
        $this->instance->unsetMediumType();
        return $this;
    }

    /**
     * Initializes a new restriction search card response data items object.
     */
    public function build(): RestrictionSearchCardResponseDataItems
    {
        return CoreHelper::clone($this->instance);
    }
}
