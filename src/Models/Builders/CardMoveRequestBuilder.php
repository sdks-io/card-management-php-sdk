<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models\Builders;

use Core\Utils\CoreHelper;
use ShellCardManagementAPIsLib\Models\CardMoveRequest;

/**
 * Builder for model CardMoveRequest
 *
 * @see CardMoveRequest
 */
class CardMoveRequestBuilder
{
    /**
     * @var CardMoveRequest
     */
    private $instance;

    private function __construct(CardMoveRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new card move request Builder object.
     */
    public static function init(): self
    {
        return new self(new CardMoveRequest());
    }

    /**
     * Sets col co code field.
     */
    public function colCoCode(?int $value): self
    {
        $this->instance->setColCoCode($value);
        return $this;
    }

    /**
     * Unsets col co code field.
     */
    public function unsetColCoCode(): self
    {
        $this->instance->unsetColCoCode();
        return $this;
    }

    /**
     * Sets col co id field.
     */
    public function colCoId(?int $value): self
    {
        $this->instance->setColCoId($value);
        return $this;
    }

    /**
     * Unsets col co id field.
     */
    public function unsetColCoId(): self
    {
        $this->instance->unsetColCoId();
        return $this;
    }

    /**
     * Sets col co country code field.
     */
    public function colCoCountryCode(?string $value): self
    {
        $this->instance->setColCoCountryCode($value);
        return $this;
    }

    /**
     * Unsets col co country code field.
     */
    public function unsetColCoCountryCode(): self
    {
        $this->instance->unsetColCoCountryCode();
        return $this;
    }

    /**
     * Sets payer number field.
     */
    public function payerNumber(?string $value): self
    {
        $this->instance->setPayerNumber($value);
        return $this;
    }

    /**
     * Unsets payer number field.
     */
    public function unsetPayerNumber(): self
    {
        $this->instance->unsetPayerNumber();
        return $this;
    }

    /**
     * Sets payer id field.
     */
    public function payerId(?int $value): self
    {
        $this->instance->setPayerId($value);
        return $this;
    }

    /**
     * Unsets payer id field.
     */
    public function unsetPayerId(): self
    {
        $this->instance->unsetPayerId();
        return $this;
    }

    /**
     * Sets cards field.
     */
    public function cards(?array $value): self
    {
        $this->instance->setCards($value);
        return $this;
    }

    /**
     * Sets target account id field.
     */
    public function targetAccountId(?int $value): self
    {
        $this->instance->setTargetAccountId($value);
        return $this;
    }

    /**
     * Sets target account number field.
     */
    public function targetAccountNumber(?string $value): self
    {
        $this->instance->setTargetAccountNumber($value);
        return $this;
    }

    /**
     * Sets target card group id field.
     */
    public function targetCardGroupId(?int $value): self
    {
        $this->instance->setTargetCardGroupId($value);
        return $this;
    }

    /**
     * Sets target new card group name field.
     */
    public function targetNewCardGroupName(?string $value): self
    {
        $this->instance->setTargetNewCardGroupName($value);
        return $this;
    }

    /**
     * Initializes a new card move request object.
     */
    public function build(): CardMoveRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
