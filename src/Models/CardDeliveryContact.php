<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

/**
 * Request entity object for CardDeliveryContact
 *
 * Mandatory when CardDeliveryType is 2 else ignored.
 */
class CardDeliveryContact implements \JsonSerializable
{
    /**
     * @var array
     */
    private $deliveryContactTitle = [];

    /**
     * @var string|null
     */
    private $deliveryContactName;

    /**
     * @var string|null
     */
    private $deliveryCompanyName;

    /**
     * @var string|null
     */
    private $deliveryAddressLine1;

    /**
     * @var array
     */
    private $deliveryAddressLine2 = [];

    /**
     * @var array
     */
    private $deliveryAddressLine3 = [];

    /**
     * @var string|null
     */
    private $deliveryZipCode;

    /**
     * @var string|null
     */
    private $deliveryCity;

    /**
     * @var array
     */
    private $deliveryRegionId = [];

    /**
     * @var array
     */
    private $deliveryRegion = [];

    /**
     * @var string|null
     */
    private $deliveryCountry;

    /**
     * @var array
     */
    private $phoneNumber = [];

    /**
     * @var array
     */
    private $emailAddress = [];

    /**
     * @var bool|null
     */
    private $saveForCardReissue;

    /**
     * Returns Delivery Contact Title.
     * Title of the contact person <br />
     *
     * Optional
     *
     * Max field length: 10
     */
    public function getDeliveryContactTitle(): ?string
    {
        if (count($this->deliveryContactTitle) == 0) {
            return null;
        }
        return $this->deliveryContactTitle['value'];
    }

    /**
     * Sets Delivery Contact Title.
     * Title of the contact person <br />
     *
     * Optional
     *
     * Max field length: 10
     *
     * @maps DeliveryContactTitle
     */
    public function setDeliveryContactTitle(?string $deliveryContactTitle): void
    {
        $this->deliveryContactTitle['value'] = $deliveryContactTitle;
    }

    /**
     * Unsets Delivery Contact Title.
     * Title of the contact person <br />
     *
     * Optional
     *
     * Max field length: 10
     */
    public function unsetDeliveryContactTitle(): void
    {
        $this->deliveryContactTitle = [];
    }

    /**
     * Returns Delivery Contact Name.
     * Name of the contact person <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 50
     */
    public function getDeliveryContactName(): ?string
    {
        return $this->deliveryContactName;
    }

    /**
     * Sets Delivery Contact Name.
     * Name of the contact person <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 50
     *
     * @maps DeliveryContactName
     */
    public function setDeliveryContactName(?string $deliveryContactName): void
    {
        $this->deliveryContactName = $deliveryContactName;
    }

    /**
     * Returns Delivery Company Name.
     * Company name <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 50
     */
    public function getDeliveryCompanyName(): ?string
    {
        return $this->deliveryCompanyName;
    }

    /**
     * Sets Delivery Company Name.
     * Company name <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 50
     *
     * @maps DeliveryCompanyName
     */
    public function setDeliveryCompanyName(?string $deliveryCompanyName): void
    {
        $this->deliveryCompanyName = $deliveryCompanyName;
    }

    /**
     * Returns Delivery Address Line 1.
     * Address line 1 <br />
     *
     * Mandatory<br />
     *
     * Max field length: 40
     */
    public function getDeliveryAddressLine1(): ?string
    {
        return $this->deliveryAddressLine1;
    }

    /**
     * Sets Delivery Address Line 1.
     * Address line 1 <br />
     *
     * Mandatory<br />
     *
     * Max field length: 40
     *
     * @maps DeliveryAddressLine1
     */
    public function setDeliveryAddressLine1(?string $deliveryAddressLine1): void
    {
        $this->deliveryAddressLine1 = $deliveryAddressLine1;
    }

    /**
     * Returns Delivery Address Line 2.
     * Address line 2 <br />
     *
     * Optional <br />
     *
     * Max field length: 40  <br />
     *
     * Optional
     */
    public function getDeliveryAddressLine2(): ?string
    {
        if (count($this->deliveryAddressLine2) == 0) {
            return null;
        }
        return $this->deliveryAddressLine2['value'];
    }

    /**
     * Sets Delivery Address Line 2.
     * Address line 2 <br />
     *
     * Optional <br />
     *
     * Max field length: 40  <br />
     *
     * Optional
     *
     * @maps DeliveryAddressLine2
     */
    public function setDeliveryAddressLine2(?string $deliveryAddressLine2): void
    {
        $this->deliveryAddressLine2['value'] = $deliveryAddressLine2;
    }

    /**
     * Unsets Delivery Address Line 2.
     * Address line 2 <br />
     *
     * Optional <br />
     *
     * Max field length: 40  <br />
     *
     * Optional
     */
    public function unsetDeliveryAddressLine2(): void
    {
        $this->deliveryAddressLine2 = [];
    }

    /**
     * Returns Delivery Address Line 3.
     * Address line 3 <br />
     *
     * Optional <br />
     *
     * Max field length: 40  <br />
     *
     * Optional
     */
    public function getDeliveryAddressLine3(): ?string
    {
        if (count($this->deliveryAddressLine3) == 0) {
            return null;
        }
        return $this->deliveryAddressLine3['value'];
    }

    /**
     * Sets Delivery Address Line 3.
     * Address line 3 <br />
     *
     * Optional <br />
     *
     * Max field length: 40  <br />
     *
     * Optional
     *
     * @maps DeliveryAddressLine3
     */
    public function setDeliveryAddressLine3(?string $deliveryAddressLine3): void
    {
        $this->deliveryAddressLine3['value'] = $deliveryAddressLine3;
    }

    /**
     * Unsets Delivery Address Line 3.
     * Address line 3 <br />
     *
     * Optional <br />
     *
     * Max field length: 40  <br />
     *
     * Optional
     */
    public function unsetDeliveryAddressLine3(): void
    {
        $this->deliveryAddressLine3 = [];
    }

    /**
     * Returns Delivery Zip Code.
     * ZIP code <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 10  <br />
     *
     * Optional
     */
    public function getDeliveryZipCode(): ?string
    {
        return $this->deliveryZipCode;
    }

    /**
     * Sets Delivery Zip Code.
     * ZIP code <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 10  <br />
     *
     * Optional
     *
     * @maps DeliveryZipCode
     */
    public function setDeliveryZipCode(?string $deliveryZipCode): void
    {
        $this->deliveryZipCode = $deliveryZipCode;
    }

    /**
     * Returns Delivery City.
     * City  <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 40
     */
    public function getDeliveryCity(): ?string
    {
        return $this->deliveryCity;
    }

    /**
     * Sets Delivery City.
     * City  <br />
     *
     * Mandatory  <br />
     *
     * Max field length: 40
     *
     * @maps DeliveryCity
     */
    public function setDeliveryCity(?string $deliveryCity): void
    {
        $this->deliveryCity = $deliveryCity;
    }

    /**
     * Returns Delivery Region Id.
     * Region Id  <br />
     *
     * Optional
     */
    public function getDeliveryRegionId(): ?int
    {
        if (count($this->deliveryRegionId) == 0) {
            return null;
        }
        return $this->deliveryRegionId['value'];
    }

    /**
     * Sets Delivery Region Id.
     * Region Id  <br />
     *
     * Optional
     *
     * @maps DeliveryRegionId
     */
    public function setDeliveryRegionId(?int $deliveryRegionId): void
    {
        $this->deliveryRegionId['value'] = $deliveryRegionId;
    }

    /**
     * Unsets Delivery Region Id.
     * Region Id  <br />
     *
     * Optional
     */
    public function unsetDeliveryRegionId(): void
    {
        $this->deliveryRegionId = [];
    }

    /**
     * Returns Delivery Region.
     * Region  <br />
     *
     * Optional<br />
     *
     * When region is passed
     */
    public function getDeliveryRegion(): ?string
    {
        if (count($this->deliveryRegion) == 0) {
            return null;
        }
        return $this->deliveryRegion['value'];
    }

    /**
     * Sets Delivery Region.
     * Region  <br />
     *
     * Optional<br />
     *
     * When region is passed
     *
     * @maps DeliveryRegion
     */
    public function setDeliveryRegion(?string $deliveryRegion): void
    {
        $this->deliveryRegion['value'] = $deliveryRegion;
    }

    /**
     * Unsets Delivery Region.
     * Region  <br />
     *
     * Optional<br />
     *
     * When region is passed
     */
    public function unsetDeliveryRegion(): void
    {
        $this->deliveryRegion = [];
    }

    /**
     * Returns Delivery Country.
     * The ISO code of the country.<br />
     */
    public function getDeliveryCountry(): ?string
    {
        return $this->deliveryCountry;
    }

    /**
     * Sets Delivery Country.
     * The ISO code of the country.<br />
     *
     * @maps DeliveryCountry
     */
    public function setDeliveryCountry(?string $deliveryCountry): void
    {
        $this->deliveryCountry = $deliveryCountry;
    }

    /**
     * Returns Phone Number.
     * Phone number for courier delivery.<br />
     *
     * Optional.<br />
     *
     * Max field length: 20
     */
    public function getPhoneNumber(): ?string
    {
        if (count($this->phoneNumber) == 0) {
            return null;
        }
        return $this->phoneNumber['value'];
    }

    /**
     * Sets Phone Number.
     * Phone number for courier delivery.<br />
     *
     * Optional.<br />
     *
     * Max field length: 20
     *
     * @maps PhoneNumber
     */
    public function setPhoneNumber(?string $phoneNumber): void
    {
        $this->phoneNumber['value'] = $phoneNumber;
    }

    /**
     * Unsets Phone Number.
     * Phone number for courier delivery.<br />
     *
     * Optional.<br />
     *
     * Max field length: 20
     */
    public function unsetPhoneNumber(): void
    {
        $this->phoneNumber = [];
    }

    /**
     * Returns Email Address.
     * Email address for courier delivery.<br />
     *
     * Optional.<br />
     *
     * Max field length: 90 <br/>Note:Based on the international standard that there can be Max Length 64
     * before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of
     * 2)
     */
    public function getEmailAddress(): ?string
    {
        if (count($this->emailAddress) == 0) {
            return null;
        }
        return $this->emailAddress['value'];
    }

    /**
     * Sets Email Address.
     * Email address for courier delivery.<br />
     *
     * Optional.<br />
     *
     * Max field length: 90 <br/>Note:Based on the international standard that there can be Max Length 64
     * before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of
     * 2)
     *
     * @maps EmailAddress
     */
    public function setEmailAddress(?string $emailAddress): void
    {
        $this->emailAddress['value'] = $emailAddress;
    }

    /**
     * Unsets Email Address.
     * Email address for courier delivery.<br />
     *
     * Optional.<br />
     *
     * Max field length: 90 <br/>Note:Based on the international standard that there can be Max Length 64
     * before the @ (the 'Local part’) =64(minimum of 1) Max Lenth after the (the domain) = 88 (Minimum of
     * 2)
     */
    public function unsetEmailAddress(): void
    {
        $this->emailAddress = [];
    }

    /**
     * Returns Save for Card Reissue.
     * If this is specified, the contact address will be saved in cards platform for card reissue
     * processing.<br />
     *
     * Optional
     */
    public function getSaveForCardReissue(): ?bool
    {
        return $this->saveForCardReissue;
    }

    /**
     * Sets Save for Card Reissue.
     * If this is specified, the contact address will be saved in cards platform for card reissue
     * processing.<br />
     *
     * Optional
     *
     * @maps SaveForCardReissue
     */
    public function setSaveForCardReissue(?bool $saveForCardReissue): void
    {
        $this->saveForCardReissue = $saveForCardReissue;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->deliveryContactTitle)) {
            $json['DeliveryContactTitle'] = $this->deliveryContactTitle['value'];
        }
        $json['DeliveryContactName']      = $this->deliveryContactName;
        $json['DeliveryCompanyName']      = $this->deliveryCompanyName;
        $json['DeliveryAddressLine1']     = $this->deliveryAddressLine1;
        if (!empty($this->deliveryAddressLine2)) {
            $json['DeliveryAddressLine2'] = $this->deliveryAddressLine2['value'];
        }
        if (!empty($this->deliveryAddressLine3)) {
            $json['DeliveryAddressLine3'] = $this->deliveryAddressLine3['value'];
        }
        $json['DeliveryZipCode']          = $this->deliveryZipCode;
        $json['DeliveryCity']             = $this->deliveryCity;
        if (!empty($this->deliveryRegionId)) {
            $json['DeliveryRegionId']     = $this->deliveryRegionId['value'];
        }
        if (!empty($this->deliveryRegion)) {
            $json['DeliveryRegion']       = $this->deliveryRegion['value'];
        }
        $json['DeliveryCountry']          = $this->deliveryCountry;
        if (!empty($this->phoneNumber)) {
            $json['PhoneNumber']          = $this->phoneNumber['value'];
        }
        if (!empty($this->emailAddress)) {
            $json['EmailAddress']         = $this->emailAddress['value'];
        }
        if (isset($this->saveForCardReissue)) {
            $json['SaveForCardReissue']   = $this->saveForCardReissue;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
