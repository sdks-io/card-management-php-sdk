<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

class AccountRestrictionResponse implements \JsonSerializable
{
    /**
     * @var array
     */
    private $requestId = [];

    /**
     * @var int|null
     */
    private $accountId;

    /**
     * @var string|null
     */
    private $accountNumber;

    /**
     * @var string|null
     */
    private $usageRestrictionStatus;

    /**
     * @var string|null
     */
    private $usageRestrictionDescription;

    /**
     * @var ErrorStatus|null
     */
    private $error;

    /**
     * Returns Request Id.
     * Request Id of the API call
     */
    public function getRequestId(): ?string
    {
        if (count($this->requestId) == 0) {
            return null;
        }
        return $this->requestId['value'];
    }

    /**
     * Sets Request Id.
     * Request Id of the API call
     *
     * @maps RequestId
     */
    public function setRequestId(?string $requestId): void
    {
        $this->requestId['value'] = $requestId;
    }

    /**
     * Unsets Request Id.
     * Request Id of the API call
     */
    public function unsetRequestId(): void
    {
        $this->requestId = [];
    }

    /**
     * Returns Account Id.
     * Account Id on which restriction is applied.
     * Example: 123456
     */
    public function getAccountId(): ?int
    {
        return $this->accountId;
    }

    /**
     * Sets Account Id.
     * Account Id on which restriction is applied.
     * Example: 123456
     *
     * @maps AccountId
     */
    public function setAccountId(?int $accountId): void
    {
        $this->accountId = $accountId;
    }

    /**
     * Returns Account Number.
     * Account Number on which restriction is applied.
     * Example: GB000000123
     */
    public function getAccountNumber(): ?string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account Number on which restriction is applied.
     * Example: GB000000123
     *
     * @maps AccountNumber
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Usage Restriction Status.
     * Status of the card usage restriction submitted to Gateway. Based on the response from Gateway value
     * will be set as either “Success” or “Failed”.
     */
    public function getUsageRestrictionStatus(): ?string
    {
        return $this->usageRestrictionStatus;
    }

    /**
     * Sets Usage Restriction Status.
     * Status of the card usage restriction submitted to Gateway. Based on the response from Gateway value
     * will be set as either “Success” or “Failed”.
     *
     * @maps UsageRestrictionStatus
     */
    public function setUsageRestrictionStatus(?string $usageRestrictionStatus): void
    {
        $this->usageRestrictionStatus = $usageRestrictionStatus;
    }

    /**
     * Returns Usage Restriction Description.
     * Response for the usage restriction in case of an error. This field will have a value only when
     * “UsageRestrictionStatus” is “Failed”.
     */
    public function getUsageRestrictionDescription(): ?string
    {
        return $this->usageRestrictionDescription;
    }

    /**
     * Sets Usage Restriction Description.
     * Response for the usage restriction in case of an error. This field will have a value only when
     * “UsageRestrictionStatus” is “Failed”.
     *
     * @maps UsageRestrictionDescription
     */
    public function setUsageRestrictionDescription(?string $usageRestrictionDescription): void
    {
        $this->usageRestrictionDescription = $usageRestrictionDescription;
    }

    /**
     * Returns Error.
     */
    public function getError(): ?ErrorStatus
    {
        return $this->error;
    }

    /**
     * Sets Error.
     *
     * @maps Error
     */
    public function setError(?ErrorStatus $error): void
    {
        $this->error = $error;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->requestId)) {
            $json['RequestId']                   = $this->requestId['value'];
        }
        if (isset($this->accountId)) {
            $json['AccountId']                   = $this->accountId;
        }
        if (isset($this->accountNumber)) {
            $json['AccountNumber']               = $this->accountNumber;
        }
        if (isset($this->usageRestrictionStatus)) {
            $json['UsageRestrictionStatus']      = $this->usageRestrictionStatus;
        }
        if (isset($this->usageRestrictionDescription)) {
            $json['UsageRestrictionDescription'] = $this->usageRestrictionDescription;
        }
        if (isset($this->error)) {
            $json['Error']                       = $this->error;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
