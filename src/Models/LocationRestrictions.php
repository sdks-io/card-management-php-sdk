<?php

declare(strict_types=1);

/*
 * ShellCardManagementAPIsLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace ShellCardManagementAPIsLib\Models;

use stdClass;

/**
 * Location restrictions to be applied on the bundle which either allows or restricts using the cards,
 * which are under the bundle, in the specified locations.
 *
 * Mandatory if respective action is set as “Add”.
 *
 * Details of location restrictions are given below.
 */
class LocationRestrictions implements \JsonSerializable
{
    /**
     * @var LocationRestrictionsCountryRestrictions|null
     */
    private $countryRestrictions;

    /**
     * @var LocationRestrictionsNetworkRestrictionsItems[]|null
     */
    private $networkRestrictions;

    /**
     * @var LocationRestrictionsShellSiteRestrictionsItems[]|null
     */
    private $shellSiteRestrictions;

    /**
     * @var LocationRestrictionsPartnerSiteRestrictionsItems[]|null
     */
    private $partnerSiteRestrictions;

    /**
     * Returns Country Restrictions.
     * An entity that encapsulate the country restrictions.
     *
     * Optional.
     */
    public function getCountryRestrictions(): ?LocationRestrictionsCountryRestrictions
    {
        return $this->countryRestrictions;
    }

    /**
     * Sets Country Restrictions.
     * An entity that encapsulate the country restrictions.
     *
     * Optional.
     *
     * @maps CountryRestrictions
     */
    public function setCountryRestrictions(?LocationRestrictionsCountryRestrictions $countryRestrictions): void
    {
        $this->countryRestrictions = $countryRestrictions;
    }

    /**
     * Returns Network Restrictions.
     * A list of NetworkRestriction entity. Each item in the list encapsulates a network restriction in a
     * given country.
     *
     * Optional.
     *
     * The details of the entity are described below:
     *
     * @return LocationRestrictionsNetworkRestrictionsItems[]|null
     */
    public function getNetworkRestrictions(): ?array
    {
        return $this->networkRestrictions;
    }

    /**
     * Sets Network Restrictions.
     * A list of NetworkRestriction entity. Each item in the list encapsulates a network restriction in a
     * given country.
     *
     * Optional.
     *
     * The details of the entity are described below:
     *
     * @maps NetworkRestrictions
     *
     * @param LocationRestrictionsNetworkRestrictionsItems[]|null $networkRestrictions
     */
    public function setNetworkRestrictions(?array $networkRestrictions): void
    {
        $this->networkRestrictions = $networkRestrictions;
    }

    /**
     * Returns Shell Site Restrictions.
     * A list of ShellSiteRestriction entity. Each item in the list encapsulates a site restriction of
     * Shell network in a given country.
     *
     * Optional.
     *
     * The details of the entity are described below.
     *
     * @return LocationRestrictionsShellSiteRestrictionsItems[]|null
     */
    public function getShellSiteRestrictions(): ?array
    {
        return $this->shellSiteRestrictions;
    }

    /**
     * Sets Shell Site Restrictions.
     * A list of ShellSiteRestriction entity. Each item in the list encapsulates a site restriction of
     * Shell network in a given country.
     *
     * Optional.
     *
     * The details of the entity are described below.
     *
     * @maps ShellSiteRestrictions
     *
     * @param LocationRestrictionsShellSiteRestrictionsItems[]|null $shellSiteRestrictions
     */
    public function setShellSiteRestrictions(?array $shellSiteRestrictions): void
    {
        $this->shellSiteRestrictions = $shellSiteRestrictions;
    }

    /**
     * Returns Partner Site Restrictions.
     * A list of PartnerSiteRestriction entity. Each item in the list encapsulates a site restriction of a
     * given partner network.
     *
     * Optional.
     *
     * The details of the entity are described below.
     *
     * @return LocationRestrictionsPartnerSiteRestrictionsItems[]|null
     */
    public function getPartnerSiteRestrictions(): ?array
    {
        return $this->partnerSiteRestrictions;
    }

    /**
     * Sets Partner Site Restrictions.
     * A list of PartnerSiteRestriction entity. Each item in the list encapsulates a site restriction of a
     * given partner network.
     *
     * Optional.
     *
     * The details of the entity are described below.
     *
     * @maps PartnerSiteRestrictions
     *
     * @param LocationRestrictionsPartnerSiteRestrictionsItems[]|null $partnerSiteRestrictions
     */
    public function setPartnerSiteRestrictions(?array $partnerSiteRestrictions): void
    {
        $this->partnerSiteRestrictions = $partnerSiteRestrictions;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->countryRestrictions)) {
            $json['CountryRestrictions']     = $this->countryRestrictions;
        }
        if (isset($this->networkRestrictions)) {
            $json['NetworkRestrictions']     = $this->networkRestrictions;
        }
        if (isset($this->shellSiteRestrictions)) {
            $json['ShellSiteRestrictions']   = $this->shellSiteRestrictions;
        }
        if (isset($this->partnerSiteRestrictions)) {
            $json['PartnerSiteRestrictions'] = $this->partnerSiteRestrictions;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
